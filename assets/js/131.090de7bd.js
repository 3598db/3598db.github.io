(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{484:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"深入nodejs模块系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入nodejs模块系统"}},[t._v("#")]),t._v(" 深入NodeJs模块系统")]),t._v(" "),a("blockquote",[a("p",[t._v("作者: 田永强")])]),t._v(" "),a("h3",{attrs:{id:"node-js-模块的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-模块的实现"}},[t._v("#")]),t._v(" Node.js 模块的实现")]),t._v(" "),a("p",[t._v("之前在网上查阅了许多介绍 Node.js的文章，可惜对于Node.js的模块机制大都着墨不多。在后续介绍模块的使用之前，我认为有必要深入一下 Node.js 的模块机制。")]),t._v(" "),a("h3",{attrs:{id:"commonjs-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范"}},[t._v("#")]),t._v(" CommonJS 规范")]),t._v(" "),a("p",[t._v("早在 Netscape 诞生不久后，JavaScript就一直在探索本地编程的路，Rhino是其代表产物。无奈那时服务端JavaScript走的路均是参考众多服务器端语言来实现的，在这样的背景之下，一没有特色，二没有实用价值。但是随着JavaScript在前端的应用越来越广泛，以及服务端JavaScript的推动，JavaScript现有的规范十分薄弱，不利于JavaScript大规模的应用。那些以JavaScript为宿主语言的环境中，只有本身的基础原生对象和类型，更多的对象和API都取决于宿主的提供，所以，我们可以看到JavaScript缺少这些功能：")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 没有模块系统。没有原生的支持密闭作用域或依赖管理。")]),t._v(" "),a("li",[t._v("JavaScript 没有标准库。除了一些核心库外，没有文件系统的 API，没有 IO 流 API 等。")]),t._v(" "),a("li",[t._v("JavaScript 没有标准接口。没有如 Web Server 或者数据库的统一接口。")]),t._v(" "),a("li",[t._v("JavaScript 没有包管理系统。不能自动加载和安装依赖。")])]),t._v(" "),a("p",[t._v("于是便有了 "),a("a",{attrs:{href:"http://www.commonjs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonJS"),a("OutboundLink")],1),t._v("规范的出现，其目标是为了构建JavaScript在包括Web服务器，桌面，命令行工具，及浏览器方面的生态系统。")]),t._v(" "),a("p",[t._v("CommonJS制定了解决这些问题的一些规范，而Node.js就是这些规范的一种实现。Node.js自身实现了"),a("code",[t._v("require")]),t._v("方法作为其引入模块的方法，同时NPM也基于CommonJS定义的包规范，实现了依赖管理和模块自动安装等功能。这里我们将深入一下Node.js的require机制和NPM基于包规范的应用。")]),t._v(" "),a("h3",{attrs:{id:"简单模块定义和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单模块定义和使用"}},[t._v("#")]),t._v(" 简单模块定义和使用")]),t._v(" "),a("p",[t._v("在 Node.js 中，定义一个模块十分方便。我们以计算圆形的面积和周长两个方法为例，来表现Node.js中模块的定义方式。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("area")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("circumference")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("将这个文件存为 circle.js，并新建一个 app.js 文件，并写入以下代码：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./circle.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The area of a circle of radius 4 is '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以看到模块调用也十分方便，只需要"),a("code",[t._v("require")]),t._v("需要调用的文件即可。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("require")]),t._v("了这个文件之后，定义在"),a("code",[t._v("exports")]),t._v("对象上的方法便可以随意调用。Node.js将模块的定义和调用都封装得极其简单方便，从API对用户友好这一个角度来说，Node.js的模块机制是非常优秀的。")]),t._v(" "),a("h3",{attrs:{id:"模块载入策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块载入策略"}},[t._v("#")]),t._v(" 模块载入策略")]),t._v(" "),a("p",[t._v("Node.js的模块分为两类，一类为原生（核心）模块，一类为文件模块。原生模块在Node.js源代码编译的时候编译进了二进制执行文件，加载的速度最快。另一类文件模块是动态加载的，加载速度比原生模块慢。但是Node.js对原生模块和文件模块都进行了缓存，于是在第二次 "),a("code",[t._v("require")]),t._v("时，是不会有重复开销的。其中原生模块都被定义在lib这个目录下面，文件模块则不定性。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node app.js\n")])])]),a("p",[t._v("由于通过命令行加载启动的文件几乎都为文件模块。我们从Node.js如何加载文件模块开始谈起。加载文件模块的工作，主要由原生模块module来实现和完成，该原生模块在启动时已经被加载，进程直接调用到runMain静态方法。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bootstrap main module.")]),t._v("\nModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("runMain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load the main module--the command line argument.")]),t._v("\n  Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("_load 静态方法在分析文件名之后执行")]),t._v(" "),a("p",[a("code",[t._v("var module = new Module(id, parent);")])]),t._v(" "),a("p",[t._v("并根据文件路径缓存当前模块对象，该模块实例对象则根据文件名加载。")]),t._v(" "),a("p",[a("code",[t._v("module.load(filename);")])]),t._v(" "),a("p",[t._v("实际上在文件模块中，又分为 3 类模块。这三类文件模块以后缀来区分，Node.js会根据后缀名来决定加载方法。")]),t._v(" "),a("ul",[a("li",[t._v(".js。通过"),a("code",[t._v("fs")]),t._v("模块同步读取"),a("code",[t._v("js")]),t._v("文件并编译执行。")]),t._v(" "),a("li",[t._v(".node。通过 C/C++ 进行编写的"),a("code",[t._v("Addon")]),t._v("。通过"),a("code",[t._v("dlopen")]),t._v("方法进行加载。")]),t._v(" "),a("li",[t._v(".json。读取文件，调用"),a("code",[t._v("JSON.parse")]),t._v("解析加载。\n这里我们将详细描述js后缀的编译过程。Node.js在编译js文件的过程中实际完成的步骤有对js文件内容进行头尾包装。以app.js为例，包装之后的app.js将会变成以下形式：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./circle.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The area of a circle of radius 4 is '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这段代码会通过vm原生模块的"),a("code",[t._v("runInThisContext")]),t._v("方法执行（类似eval，只是具有明确上下文，不污染全局），返回为一个具体的function对象。最后传入"),a("code",[t._v("module")]),t._v("对象的"),a("code",[t._v("exports")]),t._v("，"),a("code",[t._v("require")]),t._v("方法，module，文件名，目录名作为实参并执行。")]),t._v(" "),a("p",[t._v("这就是为什么"),a("code",[t._v("require")]),t._v("并没有定义在app.js文件中，但是这个方法却存在的原因。从Node.js的API文档中可以看到还有"),a("code",[t._v("__filename")]),t._v("、"),a("code",[t._v("__dirname")]),t._v("、"),a("code",[t._v("module")]),t._v("、"),a("code",[t._v("exports")]),t._v("几个没有定义但是却存在的变量。其中"),a("code",[t._v("__filename")]),t._v("和"),a("code",[t._v("__dirname")]),t._v("在查找文件路径的过程中分析得到后传入的。module变量是这个模块对象自身，exports是在module的构造函数中初始化的一个空对象（"),a("code",[t._v("{}")]),t._v("，而不是"),a("code",[t._v("null")]),t._v("）。")]),t._v(" "),a("p",[t._v("在这个主文件中，可以通过"),a("code",[t._v("require")]),t._v("方法去引入其余的模块。而其实这个"),a("code",[t._v("require")]),t._v("方法实际调用的就是"),a("code",[t._v("load")]),t._v("方法。")]),t._v(" "),a("p",[a("code",[t._v("load")]),t._v("方法在载入、编译、缓存了module后，返回module的"),a("code",[t._v("exports")]),t._v("对象。这就是circle.js文件中只有定义在"),a("code",[t._v("exports")]),t._v("对象上的方法才能被外部调用的原因。")]),t._v(" "),a("p",[t._v("以上所描述的模块载入机制均定义在lib/module.js中。")]),t._v(" "),a("h3",{attrs:{id:"require-方法中的文件查找策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require-方法中的文件查找策略"}},[t._v("#")]),t._v(" require 方法中的文件查找策略")]),t._v(" "),a("p",[t._v("由于Node.js中存在4类模块（原生模块和3种文件模块），尽管require方法极其简单，但是内部的加载却是十分复杂的，其加载优先级也各自不同。")]),t._v(" "),a("h3",{attrs:{id:"_1-从文件模块缓存中加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-从文件模块缓存中加载"}},[t._v("#")]),t._v(" 1) 从文件模块缓存中加载")]),t._v(" "),a("p",[t._v("尽管原生模块与文件模块的优先级不同，但是都不会优先于从文件模块的缓存中加载已经存在的模块。")]),t._v(" "),a("h3",{attrs:{id:"_2-从原生模块加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-从原生模块加载"}},[t._v("#")]),t._v(" 2) 从原生模块加载")]),t._v(" "),a("p",[t._v("原生模块的优先级仅次于文件模块缓存的优先级。require方法在解析文件名之后，优先检查模块是否在原生模块列表中。以http模块为例，尽管在目录下存在一个"),a("code",[t._v("http/http.js/http.node/http.json")]),t._v("文件，"),a("code",[t._v("require(“http”)")]),t._v("都不会从这些文件中加载，而是从原生模块中加载。")]),t._v(" "),a("p",[t._v("原生模块也有一个缓存区，同样也是优先从缓存区加载。如果缓存区没有被加载过，则调用原生模块的加载方式进行加载和执行。")]),t._v(" "),a("h3",{attrs:{id:"_3-从文件加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-从文件加载"}},[t._v("#")]),t._v(" 3) 从文件加载")]),t._v(" "),a("p",[t._v("当文件模块缓存中不存在，而且不是原生模块的时候，Node.js会解析require方法传入的参数，并从文件系统中加载实际的文件，加载过程中的包装和编译细节在前一节中已经介绍过，这里我们将详细描述查找文件模块的过程，其中，也有一些细节值得知晓。"),a("br"),t._v("\nrequire方法接受以下几种参数的传递：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("http")]),t._v("、"),a("code",[t._v("fs")]),t._v("、"),a("code",[t._v("path")]),t._v("等，原生模块。")]),t._v(" "),a("li",[a("code",[t._v("./mod")]),t._v("或"),a("code",[t._v("../mod")]),t._v("，相对路径的文件模块。")]),t._v(" "),a("li",[a("code",[t._v("/pathtomodule/mod")]),t._v("，绝对路径的文件模块。")]),t._v(" "),a("li",[a("code",[t._v("mod")]),t._v("，非原生模块的文件模块。\n在进入路径查找之前有必要描述一下"),a("code",[t._v("module path")]),t._v("这个Node.js中的概念。对于每一个被加载的文件模块，创建这个模块对象的时候，这个模块便会有一个"),a("code",[t._v("paths")]),t._v("属性，其值根据当前文件的路径计算得到。我们创建"),a("code",[t._v("modulepath.js")]),t._v("这样一个文件，其内容为：")])]),t._v(" "),a("p",[a("code",[t._v("console.log(module.paths);")]),a("br"),t._v("\n我们将其放到任意一个目录中执行node modulepath.js命令，将得到以下的输出结果。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("['/home/jackson/research/node_modules',\n'/home/jackson/node_modules',\n'/home/node_modules',\n'/node_modules']\n")])])]),a("p",[t._v("Windows下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("['c:\\\\nodejs\\\\node_modules','c:\\\\node_modules']\n")])])]),a("p",[t._v("可以看出"),a("code",[t._v("module path")]),t._v("的生成规则为：从当前文件目录开始查找node_modules目录；然后依次进入父目录，查找父目录下的node_modules目录；依次迭代，直到根目录下的node_modules目录。")]),t._v(" "),a("p",[t._v("除此之外还有一个全局"),a("code",[t._v("module path")]),t._v("，是当前node执行文件的相对目录（"),a("code",[t._v("../../lib/node")]),t._v("）。如果在环境变量中设置了"),a("code",[t._v("HOME")]),t._v("目录和"),a("code",[t._v("NODE_PATH")]),t._v("目录的话，整个路径还包含"),a("code",[t._v("NODE_PATH")]),t._v("和"),a("code",[t._v("HOME")]),t._v("目录下的"),a("code",[t._v(".node_libraries")]),t._v("与"),a("code",[t._v(".node_modules")]),t._v("。其最终值大致如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[NODE_PATH，HOME/.node_modules，HOME/.node_libraries，execPath/../../lib/node]\n")])])]),a("p",[t._v("下图是笔者从源代码中整理出来的整个文件查找流程：")]),t._v(" "),a("p",[t._v("简而言之，如果require绝对路径的文件，查找时不会去遍历每一个node_modules目录，其速度最快。其余流程如下：")]),t._v(" "),a("ol",[a("li",[t._v("从modulepath数组中取出第一个目录作为查找基准。")]),t._v(" "),a("li",[t._v("直接从目录中查找该文件，如果存在，则结束查找。如果不存在，则进行下一条查找。")]),t._v(" "),a("li",[t._v("尝试添加.js、.json、.node后缀后查找，如果存在文件，则结束查找。如果不存在，则进行下一条。")]),t._v(" "),a("li",[t._v("尝试将require的参数作为一个包来进行查找，读取目录下的package.json文件，取得main参数指定的文件。")]),t._v(" "),a("li",[t._v("尝试查找该文件，如果存在，则结束查找。如果不存在，则进行第3条查找。")]),t._v(" "),a("li",[t._v("如果继续失败，则取出modulepath数组中的下一个目录作为基准查找，循环第1至5个步骤。")]),t._v(" "),a("li",[t._v("如果继续失败，循环第1至6个步骤，直到modulepath中的最后一个值。")]),t._v(" "),a("li",[t._v("如果仍然失败，则抛出异常。\n9.v整个查找过程十分类似原型链的查找和作用域的查找。所幸Node.js对路径查找实现了缓存机制，否则由于每次判断路径都是同步阻塞式进行，会导致严重的性能消耗。")])]),t._v(" "),a("h2",{attrs:{id:"包结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包结构"}},[t._v("#")]),t._v(" 包结构")]),t._v(" "),a("p",[t._v("前面提到，JavaScript缺少包结构。CommonJS致力于改变这种现状，于是定义了"),a("a",{attrs:{href:"http://wiki.commonjs.org/wiki/Packages/1.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("包的结构规范"),a("OutboundLink")],1),t._v("。而NPM的出现则是为了在CommonJS规范的基础上，实现解决包的安装卸载，依赖管理，版本管理等问题。require的查找机制明了之后，我们来看一下包的细节。")]),t._v(" "),a("p",[t._v("一个符合CommonJS规范的包应该是如下这种结构：")]),t._v(" "),a("ul",[a("li",[t._v("一个package.json文件应该存在于包顶级目录下")]),t._v(" "),a("li",[t._v("二进制文件应该包含在bin目录下。")]),t._v(" "),a("li",[t._v("JavaScript代码应该包含在lib目录下。")]),t._v(" "),a("li",[t._v("文档应该在doc目录下。")]),t._v(" "),a("li",[t._v("单元测试应该在test目录下。")])]),t._v(" "),a("p",[t._v("由上文的require的查找过程可以知道，Node.js在没有找到目标文件时，会将当前目录当作一个包来尝试加载，所以在package.json文件中最重要的一个字段就是main。而实际上，这一处是Node.js的扩展，标准定义中并不包含此字段，对于require，只需要main属性即可。但是在除此之外包需要接受安装、卸载、依赖管理，版本管理等流程，所以CommonJS为package.json文件定义了如下一些必须的字段：")]),t._v(" "),a("ul",[a("li",[t._v("name。包名，需要在NPM上是唯一的。不能带有空格。")]),t._v(" "),a("li",[t._v("description。包简介。通常会显示在一些列表中。")]),t._v(" "),a("li",[t._v("version。版本号。一个语义化的版本号（http://semver.org/），通常为x.y.z。该版本号十分重要，常常用于一些版本控制的场合。")]),t._v(" "),a("li",[t._v("keywords。关键字数组。用于NPM中的分类搜索。")]),t._v(" "),a("li",[t._v("maintainers。包维护者的数组。数组元素是一个包含name、email、web三个属性的JSON对象。")]),t._v(" "),a("li",[t._v("contributors。包贡献者的数组。第一个就是包的作者本人。在开源社区，如果提交的patch被merge进master分支的话，就应当加上这个贡献patch的人。格式包含name和email。如：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jackson Tian"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mail @gmail.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fengmk2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mail2@gmail.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bugs。一个可以提交bug的URL地址。可以是邮件地址（mailto:mailxx@domain），也可以是网页地址（http://url）。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// licenses。包所使用的许可证。例如：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"licenses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GPLv2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.example.com/licenses/gpl.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// repositories。托管源代码的地址数组。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dependencies。当前包需要的依赖。这个属性十分重要，NPM会通过这个属性，帮你自动加载依赖的包。")]),t._v("\n")])])]),a("p",[t._v("以下是Express框架的package.json文件，值得参考。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"express"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sinatra inspired web development framework"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0.0alpha1-pre"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"author"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(' "TJ Holowaychuk \n')])])]),a("p",[t._v("除了前面提到的几个必选字段外，我们还发现了一些额外的字段，如bin、scripts、engines、devDependencies、author。这里可以重点提及一下scripts字段。包管理器（NPM）在对包进行安装或者卸载的时候需要进行一些编译或者清除的工作，scripts字段的对象指明了在进行操作时运行哪个文件，或者执行拿条命令。如下为一个较全面的scripts案例：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"install"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"install.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uninstall"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uninstall.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"doc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"make-doc.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果你完善了自己的JavaScript库，使之实现了CommonJS的包规范，那么你可以通过NPM来发布自己的包，为NPM上5000+的基础上再加一个模块。")]),t._v(" "),a("p",[a("code",[t._v("npm publish <folder>")]),a("br"),t._v("\n命令十分简单。但是在这之前你需要通过npmadduser命令在NPM上注册一个帐户，以便后续包的维护。NPM会分析该文件夹下的package.json文件，然后上传目录到NPM的站点上。用户在使用你的包时，也十分简明：")]),t._v(" "),a("p",[a("code",[t._v("npm install <package>")]),a("br"),t._v("\n甚至对于NPM无法安装的包（因为某些奇怪的网络原因），可以通过github手动下载其稳定版本，解压之后通过以下命令进行安装：")]),t._v(" "),a("p",[a("code",[t._v("npm install <package.json folder>")]),t._v("\n只需将路径指向package.json存在的目录即可。然后在代码中"),a("code",[t._v("require('package')")]),t._v("即可使用。")]),t._v(" "),a("p",[t._v("Node.js中的require内部流程之复杂，而方法调用之简单，实在值得叹为观止。更多NPM使用技巧可以参见 http://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence。")]),t._v(" "),a("p",[t._v("Node.js模块与前端模块的异同\n通常有一些模块可以同时适用于前后端，但是在浏览器端通过script标签的载入JavaScript文件的方式与Node.js不同。Node.js在载入到最终的执行中，进行了包装，使得每个文件中的变量天然的形成在一个闭包之中，不会污染全局变量。而浏览器端则通常是裸露的JavaScript代码片段。所以为了解决前后端一致性的问题，类库开发者需要将类库代码包装在一个闭包内。以下代码片段抽取自著名类库underscore的定义方式。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Establish the root object, `window` in the browser, or `global` on the server.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("wrapper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" define"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register as a named module with AMD.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'underscore'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("首先，它通过"),a("code",[t._v("function")]),t._v("定义构建了一个闭包，将"),a("code",[t._v("this")]),t._v("作为上下文对象直接"),a("code",[t._v("call")]),t._v("调用，以避免内部变量污染到全局作用域。续而通过判断"),a("code",[t._v("exports")]),t._v("是否存在来决定将局部变量"),a("code",[t._v("_")]),t._v("绑定给"),a("code",[t._v("exports")]),t._v("，并且根据"),a("code",[t._v("define")]),t._v("变量是否存在，作为处理在实现了"),a("a",{attrs:{href:"http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition",target:"_blank",rel:"noopener noreferrer"}},[t._v("AMD规范环境"),a("OutboundLink")],1),t._v("下的使用案例。仅只当处于浏览器的环境中的时候，"),a("code",[t._v("this")]),t._v("指向的是全局对象（window对象），才将"),a("code",[t._v("_")]),t._v("变量赋在全局对象上，作为一个全局对象的方法导出，以供外部调用。")]),t._v(" "),a("p",[t._v("所以在设计前后端通用的JavaScript类库时，都有着以下类似的判断：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EventProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EventProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("即，如果"),a("code",[t._v("exports")]),t._v("对象存在，则将局部变量挂载在"),a("code",[t._v("exports")]),t._v("对象上，如果不存在，则挂载在全局对象上。")]),t._v(" "),a("p",[t._v("对于更多前端的模块实现可以参考国内淘宝玉伯的"),a("a",{attrs:{href:"http://seajs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("seajs"),a("OutboundLink")],1),t._v("，或者思科杜欢的"),a("a",{attrs:{href:"http://www.w3cgroup.com/oye/",target:"_blank",rel:"noopener noreferrer"}},[t._v("oye"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("参考文献\nhttp://www.commonjs.org"),a("br"),t._v("\nhttp://npmjs.org/doc/README.html"),a("br"),t._v("\nhttp://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence"),a("br"),t._v("\nhttp://nodejs.org/docs/latest/api/modules.html")]),t._v(" "),a("p",[t._v("关于作者"),a("br"),t._v("\n田永强，新浪微博@朴灵，前端工程师，现职于SAP，从事MobileWebApp方面的研发工作，对NodeJS持有高度的热情，寄望打通前端JavaScript与NodeJS的隔阂，将NodeJS引荐给更多的前端工程师。兴趣：读万卷书，行万里路。个人"),a("a",{attrs:{href:"http://github.com/JacksonTian",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),a("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);