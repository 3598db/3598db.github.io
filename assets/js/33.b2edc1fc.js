(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{387:function(e,s,a){"use strict";a.r(s);var t=a(42),_=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"flex笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex笔记"}},[e._v("#")]),e._v(" ⭐️Flex笔记")]),e._v(" "),a("p",[e._v("语法: "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：语法篇"),a("OutboundLink")],1),a("br"),e._v("\n实例: "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：实例篇"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("阮老师已经说得图文并茂的了，就不过多赘述了，总结下api。 😃")]),e._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),a("p",[e._v("采用"),a("code",[e._v("Flex")]),e._v("布局的元素，称为"),a("code",[e._v("Flex")]),e._v('容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为'),a("code",[e._v("Flex")]),e._v('项目（flex item），简称"项目"。')]),e._v(" "),a("p",[a("img",{attrs:{src:"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png",alt:""}})]),e._v(" "),a("p",[e._v("容器默认存在两根轴：水平的主轴（"),a("code",[e._v("main axis")]),e._v("）和垂直的交叉轴（"),a("code",[e._v("cross axis")]),e._v("）。主轴的开始位置（与边框的交叉点）叫做"),a("code",[e._v("main start")]),e._v("，结束位置叫做"),a("code",[e._v("main end")]),e._v("；交叉轴的开始位置叫做"),a("code",[e._v("cross start")]),e._v("，结束位置叫做"),a("code",[e._v("cross end")]),e._v("。")]),e._v(" "),a("p",[e._v("项目默认沿主轴排列。单个项目占据的主轴空间叫做"),a("code",[e._v("main size")]),e._v("，占据的交叉轴空间叫做"),a("code",[e._v("cross size")]),e._v("。")]),e._v(" "),a("h2",{attrs:{id:"容器的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[e._v("#")]),e._v(" 容器的属性")]),e._v(" "),a("p",[e._v("以下6个属性设置在容器上。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-direction")])]),e._v(" "),a("li",[a("code",[e._v("flex-wrap")])]),e._v(" "),a("li",[a("code",[e._v("flex-flow")])]),e._v(" "),a("li",[a("code",[e._v("justify-content")])]),e._v(" "),a("li",[a("code",[e._v("align-items")])]),e._v(" "),a("li",[a("code",[e._v("align-content")])])]),e._v(" "),a("h3",{attrs:{id:"_1-flex-direction属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex-direction属性"}},[e._v("#")]),e._v(" 1) flex-direction属性")]),e._v(" "),a("p",[a("code",[e._v("flex-direction")]),e._v("属性决定主轴的方向（即项目的排列方向）。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("它可能有4个值。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("row")]),e._v("（默认值）：主轴为水平方向，起点在左端。")]),e._v(" "),a("li",[a("code",[e._v("row-reverse")]),e._v("：主轴为水平方向，起点在右端。")]),e._v(" "),a("li",[a("code",[e._v("column")]),e._v("：主轴为垂直方向，起点在上沿。")]),e._v(" "),a("li",[a("code",[e._v("column-reverse")]),e._v("：主轴为垂直方向，起点在下沿。")])]),e._v(" "),a("h3",{attrs:{id:"_2-flex-wrap属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-wrap属性"}},[e._v("#")]),e._v(" 2) flex-wrap属性")]),e._v(" "),a("p",[e._v('默认情况下，项目都排在一条线（又称"轴线"）上。'),a("code",[e._v("flex-wrap")]),e._v("属性定义，如果一条轴线排不下，如何换行")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("它可能取三个值。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("nowrap")]),e._v("（默认）：不换行。")]),e._v(" "),a("li",[a("code",[e._v("wrap")]),e._v("：换行，第一行在上方。")]),e._v(" "),a("li",[a("code",[e._v("wrap-reverse")]),e._v("：换行，第一行在下方。")])]),e._v(" "),a("h3",{attrs:{id:"_3-flex-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-flow"}},[e._v("#")]),e._v(" 3) flex-flow")]),e._v(" "),a("p",[a("code",[e._v("flex-flow")]),e._v("属性是"),a("code",[e._v("flex-direction")]),e._v("属性和"),a("code",[e._v("flex-wrap")]),e._v("属性的简写形式，默认值为"),a("code",[e._v("row nowrap")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <flex-direction> || <flex-wrap>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h3",{attrs:{id:"_4-justify-content属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-justify-content属性"}},[e._v("#")]),e._v(" 4) justify-content属性")]),e._v(" "),a("p",[a("code",[e._v("justify-content")]),e._v("属性定义了项目在主轴上的对齐方式。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v("（默认值）：左对齐")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v("：右对齐")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v("： 居中")]),e._v(" "),a("li",[a("code",[e._v("space-between")]),e._v("：两端对齐，项目之间的间隔都相等。")]),e._v(" "),a("li",[a("code",[e._v("space-around")]),e._v("：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])]),e._v(" "),a("h3",{attrs:{id:"_5-align-items属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-align-items属性"}},[e._v("#")]),e._v(" 5) align-items属性")]),e._v(" "),a("p",[a("code",[e._v("align-items")]),e._v("属性定义项目在交叉轴上如何对齐。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v("：交叉轴的起点对齐。")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v("：交叉轴的终点对齐。")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v("：交叉轴的中点对齐。")]),e._v(" "),a("li",[a("code",[e._v("baseline")]),e._v(": 项目的第一行文字的基线对齐。")]),e._v(" "),a("li",[a("code",[e._v("stretch")]),e._v("（默认值）：如果项目未设置高度或设为"),a("code",[e._v("auto")]),e._v("，将占满整个容器的高度。")])]),e._v(" "),a("h3",{attrs:{id:"_6-align-content属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-align-content属性"}},[e._v("#")]),e._v(" 6) align-content属性")]),e._v(" "),a("p",[a("code",[e._v("align-content")]),e._v("属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" flex-start | flex-end | center | space-between | space-around | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("该属性可能取6个值。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v("：与交叉轴的起点对齐。")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v("：与交叉轴的终点对齐。")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v("：与交叉轴的中点对齐。")]),e._v(" "),a("li",[a("code",[e._v("space-between")]),e._v("：与交叉轴两端对齐，轴线之间的间隔平均分布。")]),e._v(" "),a("li",[a("code",[e._v("space-around")]),e._v("：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。")]),e._v(" "),a("li",[a("code",[e._v("stretch")]),e._v("（默认值）：轴线占满整个交叉轴。")])]),e._v(" "),a("h2",{attrs:{id:"项目的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目的属性"}},[e._v("#")]),e._v(" 项目的属性")]),e._v(" "),a("p",[e._v("以下6个属性设置在项目上。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("order")])]),e._v(" "),a("li",[a("code",[e._v("flex-grow")])]),e._v(" "),a("li",[a("code",[e._v("flex-shrink")])]),e._v(" "),a("li",[a("code",[e._v("flex-basis")])]),e._v(" "),a("li",[a("code",[e._v("flex")])]),e._v(" "),a("li",[a("code",[e._v("align-self")])])]),e._v(" "),a("h3",{attrs:{id:"_1-order属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-order属性"}},[e._v("#")]),e._v(" 1) order属性")]),e._v(" "),a("p",[a("code",[e._v("order")]),e._v("属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <integer>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h3",{attrs:{id:"_2-flex-grow属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-grow属性"}},[e._v("#")]),e._v(" 2) flex-grow属性")]),e._v(" "),a("p",[a("code",[e._v("flex-grow")]),e._v("属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* default 0 */")]),e._v("\n")])])]),a("p",[e._v("如果所有项目的"),a("code",[e._v("flex-grow")]),e._v("属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的"),a("code",[e._v("flex-grow")]),e._v("属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。")]),e._v(" "),a("h3",{attrs:{id:"_3-flex-shrink属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-shrink属性"}},[e._v("#")]),e._v(" 3) flex-shrink属性")]),e._v(" "),a("p",[a("code",[e._v("flex-shrink")]),e._v("属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* default 1 */")]),e._v("\n")])])]),a("p",[e._v("如果所有项目的"),a("code",[e._v("flex-shrink")]),e._v("属性都为1，当空间不足时，都将等比例缩小。如果一个项目的"),a("code",[e._v("flex-shrink")]),e._v("属性为0，其他项目都为1，则空间不足时，前者不缩小。\n负值对该属性无效。")]),e._v(" "),a("h3",{attrs:{id:"_4-flex-basis属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-flex-basis属性"}},[e._v("#")]),e._v(" 4) flex-basis属性")]),e._v(" "),a("p",[a("code",[e._v("flex-basis")]),e._v("属性定义了在分配多余空间之前，项目占据的主轴空间（"),a("code",[e._v("main size")]),e._v("）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为"),a("code",[e._v("auto")]),e._v("，即项目的本来大小。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* default auto */")]),e._v("\n")])])]),a("p",[e._v("它可以设为跟"),a("code",[e._v("width")]),e._v("或"),a("code",[e._v("height")]),e._v("属性一样的值（比如350px），则项目将占据固定空间。")]),e._v(" "),a("h3",{attrs:{id:"_5-flex属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-flex属性"}},[e._v("#")]),e._v(" 5) flex属性")]),e._v(" "),a("p",[a("code",[e._v("flex")]),e._v("属性是"),a("code",[e._v("flex-grow")]),e._v(", "),a("code",[e._v("flex-shrink")]),e._v(" 和 "),a("code",[e._v("flex-basis")]),e._v("的简写，默认值为"),a("code",[e._v("0 1 auto")]),e._v("。后两个属性可选。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" none | [ <"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'flex-grow'")]),e._v("> <"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'flex-shrink'")]),e._v(">? || <"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'flex-basis'")]),e._v("> ]\n")])])]),a("p",[e._v("该属性有两个快捷值："),a("code",[e._v("auto (1 1 auto)")]),e._v(" 和 "),a("code",[e._v("none (0 0 auto)")]),e._v("。")]),e._v(" "),a("p",[e._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),e._v(" "),a("h3",{attrs:{id:"_6-align-self属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-align-self属性"}},[e._v("#")]),e._v(" 6) align-self属性")]),e._v(" "),a("p",[a("code",[e._v("align-self")]),e._v("属性允许单个项目有与其他项目不一样的对齐方式，可覆盖"),a("code",[e._v("align-items")]),e._v("属性。默认值为"),a("code",[e._v("auto")]),e._v("，表示继承父元素的"),a("code",[e._v("align-items")]),e._v("属性，如果没有父元素，则等同于"),a("code",[e._v("stretch")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" auto | flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("该属性可能取6个值，除了"),a("code",[e._v("auto")]),e._v("，其他都与"),a("code",[e._v("align-items")]),e._v("属性完全一致。")])])}),[],!1,null,null,null);s.default=_.exports}}]);