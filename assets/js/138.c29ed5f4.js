(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{494:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("h4",{attrs:{id:"vue-js是森么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-js是森么"}},[t._v("#")]),t._v(" Vue.js是森么")]),t._v(" "),s("h4",{attrs:{id:"起步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起步"}},[t._v("#")]),t._v(" 起步")]),t._v(" "),s("h4",{attrs:{id:"声明式渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式渲染"}},[t._v("#")]),t._v(" 声明式渲染")]),t._v(" "),s("h4",{attrs:{id:"条件与循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件与循环"}},[t._v("#")]),t._v(" 条件与循环")]),t._v(" "),s("h4",{attrs:{id:"处理用户输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理用户输入"}},[t._v("#")]),t._v(" 处理用户输入")]),t._v(" "),s("h4",{attrs:{id:"组件化应用构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化应用构建"}},[t._v("#")]),t._v(" 组件化应用构建")]),t._v(" "),s("h3",{attrs:{id:"vue实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue实例"}},[t._v("#")]),t._v(" Vue实例")]),t._v(" "),s("h4",{attrs:{id:"创建一个vue实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个vue实例"}},[t._v("#")]),t._v(" 创建一个vue实例")]),t._v(" "),s("h4",{attrs:{id:"数据与方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据与方法"}},[t._v("#")]),t._v(" 数据与方法")]),t._v(" "),s("ol",[s("li",[t._v("目前2.x版本基于对象getter setter\n值得注意的是只有当实例被创建时就已经存在于 data 中的属性才是响应式的。也就是说如果你添加一个新的属性，那么对 他的改动将不会触发任何视图的更新。如果你知道你会在晚些时候需要一个属性，但是一开始它为空或不存在，那么你仅需要设置一些初始值。\n这里唯一的例外是使用 "),s("code",[t._v("Object.freeze()")]),t._v("，这会阻止修改现有的属性，也意味着响应系统无法再追踪变化。")]),t._v(" "),s("li",[t._v("Vue 实例还暴露了一些有用的实例属性与方法。它们都有前缀 "),s("code",[t._v("$")]),t._v("，以便与用户定义的属性区分开来。")])]),t._v(" "),s("h4",{attrs:{id:"实例声明周期钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例声明周期钩子"}},[t._v("#")]),t._v(" 实例声明周期钩子")]),t._v(" "),s("h4",{attrs:{id:"生命周期图示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期图示"}},[t._v("#")]),t._v(" 生命周期图示")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cn.vuejs.org/images/lifecycle.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"模板语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板语法"}},[t._v("#")]),t._v(" 模板语法")]),t._v(" "),s("p",[t._v("Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。所有 Vue.js 的模板都是合法的 HTML ，所以能被遵循规范的浏览器和 HTML 解析器解析。\n在底层的实现上，Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，Vue 能够智能地计算出最少需要重新渲染多少组件，并把 DOM 操作次数减到最少。\n如果你熟悉虚拟 DOM 并且偏爱 JavaScript 的原始力量，你也可以不用模板，直接写渲染 (render) 函数，使用可选的 JSX 语法。")]),t._v(" "),s("h4",{attrs:{id:"插值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插值"}},[t._v("#")]),t._v(" 插值")]),t._v(" "),s("h5",{attrs:{id:"文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本"}},[t._v("#")]),t._v(" 文本")]),t._v(" "),s("h5",{attrs:{id:"原始html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始html"}},[t._v("#")]),t._v(" 原始HTML")]),t._v(" "),s("p",[t._v("注意，你不能使用 "),s("code",[t._v("v-html")]),t._v(" 来复合局部模板，因为 Vue 不是基于字符串的模板引擎。反之，对于用户界面 (UI)，组件更适合作为可重用和可组合的基本单位。\n！你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致 XSS 攻击。请只对可信内容使用 HTML 插值，绝不要对用户提供的内容使用插值。")]),t._v(" "),s("h5",{attrs:{id:"特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),s("h5",{attrs:{id:"使用-javascript-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-javascript-表达式"}},[t._v("#")]),t._v(" 使用 JavaScript 表达式")]),t._v(" "),s("p",[t._v("这些表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析。有个限制就是，每个绑定都只能包含单个表达式。\n！模板表达式都被放在沙盒中，只能访问全局变量的一个白名单，如 "),s("code",[t._v("Math")]),t._v(" 和 "),s("code",[t._v("Date")]),t._v(" 。你不应该在模板表达式中试图访问用户定义的全局变量。")]),t._v(" "),s("h4",{attrs:{id:"指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),s("p",[t._v("指令 (Directives) 是带有 "),s("code",[t._v("v-")]),t._v(" 前缀的特殊特性。指令特性的值预期是单个 JavaScript 表达式 ("),s("code",[t._v("v-for")]),t._v("是例外情况，稍后我们再讨论)。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。")]),t._v(" "),s("h5",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("p",[t._v("一些指令能够接收一个“参数”，在指令名称之后以冒号表示。例如，"),s("code",[t._v("v-bind")]),t._v(" 指令可以用于响应式地更新 HTML 特性:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在这里 "),s("code",[t._v("href")]),t._v(" 是参数，告知 "),s("code",[t._v("v-bind")]),t._v(" 指令将该元素的 "),s("code",[t._v("href")]),t._v(" 特性与表达式 "),s("code",[t._v("url")]),t._v(" 的值绑定。\n另一个例子是 "),s("code",[t._v("v-on")]),t._v(" 指令，它用于监听 DOM 事件：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在这里参数是监听的事件名。")]),t._v(" "),s("h5",{attrs:{id:"动态参数-2-6-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态参数-2-6-0"}},[t._v("#")]),t._v(" 动态参数 (2.6.0+)")]),t._v(" "),s("p",[t._v("从 2.6.0 开始，可以用方括号括起来的 JavaScript 表达式作为一个指令的参数：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("[attributeName]")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这里的 attributeName 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的 Vue 实例有一个 "),s("code",[t._v("data")]),t._v(" 属性 "),s("code",[t._v("attributeName")]),t._v("，其值为 "),s("code",[t._v('"href"')]),t._v("，那么这个绑定将等价于 "),s("code",[t._v("v-bind:href")]),t._v("。\n同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("[eventName]")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("同样地，当 "),s("code",[t._v("eventName")]),t._v(" 的值为 "),s("code",[t._v('"focus"')]),t._v(" 时，"),s("code",[t._v("v-on:[eventName]")]),t._v(" 将等价于 "),s("code",[t._v("v-on:focus")]),t._v("。\n"),s("strong",[t._v("对动态参数的值的约束")]),t._v("\n动态参数预期会求出一个字符串，异常情况下值为 "),s("code",[t._v("null")]),t._v("。这个特殊的 "),s("code",[t._v("null")]),t._v(" 值可以被显性地用于移除绑定。任何其它非字符串类型的值都将会触发一个警告。\n"),s("strong",[t._v("对动态参数表达式的约束")]),t._v("\n!动态参数表达式有一些语法约束，因为某些字符，例如空格和引号，放在 HTML 特性名里是无效的。同样，在 DOM 中使用模板时你需要回避大写键名。\n例如，下面的代码是无效的：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这会触发一个编译警告 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("['foo'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("bar]")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("变通的办法是使用没有空格或引号的表达式，或用计算属性替代这种复杂表达式。\n另外，如果你在 DOM 中使用模板 (直接在一个 HTML 文件里撰写模板)，需要留意浏览器会把特性名全部强制转为小写：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在 DOM 中使用模板时这段代码会被转换为 `v-bind:[someattr]` --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("[someAttr]")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h5",{attrs:{id:"修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),s("h4",{attrs:{id:"缩写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缩写"}},[t._v("#")]),t._v(" 缩写")]),t._v(" "),s("h5",{attrs:{id:"v-bind-缩写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-bind-缩写"}},[t._v("#")]),t._v(" v-bind 缩写")]),t._v(" "),s("h5",{attrs:{id:"v-on-缩写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-on-缩写"}},[t._v("#")]),t._v(" v-on 缩写")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"计算属性和侦听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性和侦听器"}},[t._v("#")]),t._v(" 计算属性和侦听器")]),t._v(" "),s("h4",{attrs:{id:"计算属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性"}},[t._v("#")]),t._v(" 计算属性")]),t._v(" "),s("p",[t._v("模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" {{ message.split('').reverse().join('') }} "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在这个地方，模板不再是简单的声明式逻辑。你必须看一段时间才能意识到，这里是想要显示变量 "),s("code",[t._v("message")]),t._v("的翻转字符串。当你想要在模板中多次引用此处的翻转字符串时，就会更加难以处理。\n所以，对于任何复杂逻辑，你都应当使用"),s("strong",[t._v("计算属性")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"基础例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础例子"}},[t._v("#")]),t._v(" 基础例子")]),t._v(" "),s("h5",{attrs:{id:"计算属性缓存vs方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性缓存vs方法"}},[t._v("#")]),t._v(" 计算属性缓存vs方法")]),t._v(" "),s("p",[t._v("你可能已经注意到我们可以通过在表达式中调用方法来达到同样的效果：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('Reversed message: "{{ reversedMessage() }}"'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在组件中 methods: { reversedMessage: function () { return this.message.split('').reverse().join('') } }")]),t._v("\n")])])]),s("p",[t._v("我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是"),s("strong",[t._v("计算属性是基于它们的响应式依赖进行缓存的")]),t._v("。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要"),s("code",[t._v("message")]),t._v("还没有发生改变，多次访问 "),s("code",[t._v("reversedMessage")]),t._v("计算属性会立即返回之前的计算结果，而不必再次执行函数。\n这也同样意味着下面的计算属性将不再更新，因为 "),s("code",[t._v("Date.now()")]),t._v(" 不是响应式依赖：\n相比之下，每当触发重新渲染时，调用方法将"),s("strong",[t._v("总会")]),t._v("再次执行函数。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("computed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性 A，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于 A 。如果没有缓存，我们将不可避免的多次执行 A 的 getter！如果你不希望有缓存，请用方法来替代。")]),t._v(" "),s("h5",{attrs:{id:"计算属性vs侦听属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性vs侦听属性"}},[t._v("#")]),t._v(" 计算属性vs侦听属性")]),t._v(" "),s("p",[t._v("Vue 提供了一种更通用的方式来观察和响应 Vue 实例上的数据变动：侦听属性。当你有一些数据需要随着其它数据变动而变动时，你很容易滥用 "),s("code",[t._v("watch")]),t._v("——特别是如果你之前使用过 AngularJS。然而，通常更好的做法是使用计算属性而不是命令式的 "),s("code",[t._v("watch")]),t._v(" 回调。细想一下这个例子：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ fullName }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" el"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" firstName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fullName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Foo Bar'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" watch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("firstName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fullName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("lastName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fullName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("上面代码是命令式且重复的。将它与计算属性的版本进行比较：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" el"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" firstName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bar'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" computed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fullName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"计算属性的-setter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算属性的-setter"}},[t._v("#")]),t._v(" 计算属性的 setter")]),t._v(" "),s("p",[t._v("计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter ：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... computed: { fullName: { // getter get: function () { return this.firstName + ' ' + this.lastName }, // setter set: function (newValue) { var names = newValue.split(' ') this.firstName = names[0] this.lastName = names[names.length - 1] } } } // ...")]),t._v("\n")])])]),s("p",[t._v("现在再运行 "),s("code",[t._v("vm.fullName = 'John Doe'")]),t._v(" 时，setter 会被调用，"),s("code",[t._v("vm.firstName")]),t._v(" 和 "),s("code",[t._v("vm.lastName")]),t._v("也会相应地被更新。")]),t._v(" "),s("h4",{attrs:{id:"侦听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#侦听器"}},[t._v("#")]),t._v(" 侦听器")]),t._v(" "),s("h2",{attrs:{id:"虽然计算属性在大多数情况下更合适-但有时也需要一个自定义的侦听器。这就是为什么-vue-通过-watch-选项提供了一个更通用的方法-来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时-这个方式是最有用的。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虽然计算属性在大多数情况下更合适-但有时也需要一个自定义的侦听器。这就是为什么-vue-通过-watch-选项提供了一个更通用的方法-来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时-这个方式是最有用的。"}},[t._v("#")]),t._v(" 虽然计算属性在大多数情况下更合适，但有时也需要一个自定义的侦听器。这就是为什么 Vue 通过 watch 选项提供了一个更通用的方法，来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。")]),t._v(" "),s("h3",{attrs:{id:"class-与-style-绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-与-style-绑定"}},[t._v("#")]),t._v(" Class 与 Style 绑定")]),t._v(" "),s("p",[t._v("操作元素的 class 列表和内联样式是数据绑定的一个常见需求。因为它们都是属性，所以我们可以用 v-bind 处理它们：只需要通过表达式计算出字符串结果即可。不过，字符串拼接麻烦且易错。因此，在将 "),s("code",[t._v("v-bind")]),t._v(" 用于 class 和 style 时，Vue.js 做了专门的增强。表达式结果的类型除了字符串之外，还可以是对象或数组。")]),t._v(" "),s("h4",{attrs:{id:"绑定-html-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定-html-class"}},[t._v("#")]),t._v(" 绑定 HTML Class")]),t._v(" "),s("h5",{attrs:{id:"对象语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象语法"}},[t._v("#")]),t._v(" 对象语法")]),t._v(" "),s("h5",{attrs:{id:"数组语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组语法"}},[t._v("#")]),t._v(" 数组语法")]),t._v(" "),s("h5",{attrs:{id:"用在组件上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用在组件上"}},[t._v("#")]),t._v(" 用在组件上")]),t._v(" "),s("h4",{attrs:{id:"绑定内联样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定内联样式"}},[t._v("#")]),t._v(" 绑定内联样式")]),t._v(" "),s("h5",{attrs:{id:"对象语法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象语法-2"}},[t._v("#")]),t._v(" 对象语法")]),t._v(" "),s("h5",{attrs:{id:"数组语法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组语法-2"}},[t._v("#")]),t._v(" 数组语法")]),t._v(" "),s("h5",{attrs:{id:"自动添加前缀"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动添加前缀"}},[t._v("#")]),t._v(" 自动添加前缀")]),t._v(" "),s("h5",{attrs:{id:"多重值-2-3-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重值-2-3-0"}},[t._v("#")]),t._v(" 多重值(2.3.0+)")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"条件渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染"}},[t._v("#")]),t._v(" 条件渲染")]),t._v(" "),s("h4",{attrs:{id:"v-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if"}},[t._v("#")]),t._v(" v-if")]),t._v(" "),s("h5",{attrs:{id:"在-template-元素上使用-v-if-条件渲染分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-template-元素上使用-v-if-条件渲染分组"}},[t._v("#")]),t._v(" 在 "),s("code",[t._v("<template>")]),t._v(" 元素上使用 v-if 条件渲染分组")]),t._v(" "),s("p",[t._v("因为 "),s("code",[t._v("v-if")]),t._v(" 是一个指令，所以必须将它添加到一个元素上。但是如果想切换多个元素呢？此时可以把一个 "),s("code",[t._v("<template>")]),t._v(" 元素当做不可见的包裹元素，并在上面使用 "),s("code",[t._v("v-if")]),t._v("。最终的渲染结果将不包含 "),s("code",[t._v("<template>")]),t._v(" 元素。")]),t._v(" "),s("h4",{attrs:{id:"v-else"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-else"}},[t._v("#")]),t._v(" v-else")]),t._v(" "),s("p",[s("code",[t._v("v-else")]),t._v(" 元素必须紧跟在带 "),s("code",[t._v("v-if")]),t._v(" 或者 "),s("code",[t._v("v-else-if")]),t._v(" 的元素的后面，否则它将不会被识别。")]),t._v(" "),s("h5",{attrs:{id:"v-else-if-2-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-else-if-2-1-0"}},[t._v("#")]),t._v(" v-else-if(2.1.0+)")]),t._v(" "),s("p",[t._v("类似于 "),s("code",[t._v("v-else")]),t._v("，"),s("code",[t._v("v-else-if")]),t._v(" 也必须紧跟在带 "),s("code",[t._v("v-if")]),t._v(" 或者 "),s("code",[t._v("v-else-if")]),t._v(" 的元素之后。")]),t._v(" "),s("h5",{attrs:{id:"用key-管理可复用的元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用key-管理可复用的元素"}},[t._v("#")]),t._v(" 用key 管理可复用的元素")]),t._v(" "),s("p",[t._v("Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。这么做除了使 Vue 变得非常快之外，还有其它一些好处。这样也不总是符合实际需求，所以 Vue 为你提供了一种方式来表达“这两个元素是完全独立的，不要复用它们”。只需添加一个具有唯一值的 "),s("code",[t._v("key")]),t._v(" 属性即可。")]),t._v(" "),s("h5",{attrs:{id:"v-show"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show"}},[t._v("#")]),t._v(" v-show")]),t._v(" "),s("h5",{attrs:{id:"v-if-vs-v-show"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-vs-v-show"}},[t._v("#")]),t._v(" v-if vs v-show")]),t._v(" "),s("p",[s("code",[t._v("v-if")]),t._v(" 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。\n"),s("code",[t._v("v-if")]),t._v(" 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。\n相比之下，"),s("code",[t._v("v-show")]),t._v(" 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。\n一般来说，"),s("code",[t._v("v-if")]),t._v(" 有更高的切换开销，而 "),s("code",[t._v("v-show")]),t._v(" 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 "),s("code",[t._v("v-show")]),t._v(" 较好；如果在运行时条件很少改变，则使用 "),s("code",[t._v("v-if")]),t._v(" 较好。")]),t._v(" "),s("h4",{attrs:{id:"v-if-与-v-for-一起使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-与-v-for-一起使用"}},[t._v("#")]),t._v(" v-if 与 v-for 一起使用")]),t._v(" "),s("h2",{attrs:{id:"不推荐同时使用-v-if-和-v-for。请查阅风格指南以获取更多信息。当-v-if-与-v-for-一起使用时-v-for-具有比-v-if-更高的优先级。请查阅列表渲染指南-以获取详细信息。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不推荐同时使用-v-if-和-v-for。请查阅风格指南以获取更多信息。当-v-if-与-v-for-一起使用时-v-for-具有比-v-if-更高的优先级。请查阅列表渲染指南-以获取详细信息。"}},[t._v("#")]),t._v(" 不推荐同时使用 "),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v("。请查阅风格指南以获取更多信息。\n当 "),s("code",[t._v("v-if")]),t._v(" 与 "),s("code",[t._v("v-for")]),t._v(" 一起使用时，"),s("code",[t._v("v-for")]),t._v(" 具有比 "),s("code",[t._v("v-if")]),t._v(" 更高的优先级。请查阅列表渲染指南 以获取详细信息。")]),t._v(" "),s("h3",{attrs:{id:"列表渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表渲染"}},[t._v("#")]),t._v(" 列表渲染")]),t._v(" "),s("h4",{attrs:{id:"用-v-for-把一个数组对应为一组元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用-v-for-把一个数组对应为一组元素"}},[t._v("#")]),t._v(" 用 v-for 把一个数组对应为一组元素")]),t._v(" "),s("p",[t._v("我们可以用 "),s("code",[t._v("v-for")]),t._v(" 指令基于一个数组来渲染一个列表。"),s("code",[t._v("v-for")]),t._v(" 指令需要使用 "),s("code",[t._v("item in items")]),t._v(" 形式的特殊语法，其中 "),s("code",[t._v("items")]),t._v(" 是源数据数组，而 "),s("code",[t._v("item")]),t._v(" 则是被迭代的数组元素的别名。\n在 "),s("code",[t._v("v-for")]),t._v(" 块中，我们可以访问所有父作用域的属性。"),s("code",[t._v("v-for")]),t._v(" 还支持一个可选的第二个参数，即当前项的索引。\n你也可以用 "),s("code",[t._v("of")]),t._v(" 替代 "),s("code",[t._v("in")]),t._v(" 作为分隔符，因为它更接近 JavaScript 迭代器的语法。")]),t._v(" "),s("h4",{attrs:{id:"在-v-for-里使用对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-v-for-里使用对象"}},[t._v("#")]),t._v(" 在 v-for 里使用对象")]),t._v(" "),s("p",[t._v("!在遍历对象时，会按 "),s("code",[t._v("Object.keys()")]),t._v(" 的结果遍历，但是不能保证它的结果在不同的 JavaScript 引擎下都一致。")]),t._v(" "),s("h4",{attrs:{id:"维护状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#维护状态"}},[t._v("#")]),t._v(" 维护状态")]),t._v(" "),s("p",[t._v("当 Vue 正在更新使用 "),s("code",[t._v("v-for")]),t._v(" 渲染的元素列表时，它默认使用“就地更新”的策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是就地更新每个元素，并且确保它们在每个索引位置正确渲染。这个类似 Vue 1.x 的 "),s("code",[t._v('track-by="$index"')]),t._v("。\n这个默认的模式是高效的，但是只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出。\n为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素，你需要为每项提供一个唯一 "),s("code",[t._v("key")]),t._v(" 属性：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-for")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item in items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("key")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item.id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 内容 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("建议尽可能在使用 "),s("code",[t._v("v-for")]),t._v(" 时提供 "),s("code",[t._v("key attribute")]),t._v("，除非遍历输出的 DOM 内容非常简单，或者是刻意依赖默认行为以获取性能上的提升。\n因为它是 Vue 识别节点的一个通用机制，"),s("code",[t._v("key")]),t._v(" 并不仅与 "),s("code",[t._v("v-for")]),t._v(" 特别关联。后面我们将在指南中看到，它还具有其它用途。\n!不要使用对象或数组之类的非基本类型值作为 "),s("code",[t._v("v-for")]),t._v(" 的 "),s("code",[t._v("key")]),t._v("。请用字符串或数值类型的值。")]),t._v(" "),s("h4",{attrs:{id:"数组更新检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组更新检测"}},[t._v("#")]),t._v(" 数组更新检测")]),t._v(" "),s("h5",{attrs:{id:"变异方法-mutation-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变异方法-mutation-method"}},[t._v("#")]),t._v(" 变异方法 (mutation method)")]),t._v(" "),s("p",[t._v("Vue 将被侦听的数组的变异方法进行了包裹，所以它们也将会触发视图更新。这些被包裹过的方法包括：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("push()")])]),t._v(" "),s("li",[s("code",[t._v("pop()")])]),t._v(" "),s("li",[s("code",[t._v("shift()")])]),t._v(" "),s("li",[s("code",[t._v("unshift()")])]),t._v(" "),s("li",[s("code",[t._v("splice()")])]),t._v(" "),s("li",[s("code",[t._v("sort()")])]),t._v(" "),s("li",[s("code",[t._v("reverse()")])])]),t._v(" "),s("h5",{attrs:{id:"替换数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换数组"}},[t._v("#")]),t._v(" 替换数组")]),t._v(" "),s("p",[t._v("变异方法，顾名思义，会改变调用了这些方法的原始数组。相比之下，也有非变异 (non-mutating method) 方法，例如 "),s("code",[t._v("filter()")]),t._v("、"),s("code",[t._v("concat()")]),t._v(" 和 "),s("code",[t._v("slice()")]),t._v(" 。它们不会改变原始数组，而总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("example1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" example1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("你可能认为这将导致 Vue 丢弃现有 DOM 并重新渲染整个列表。幸运的是，事实并非如此。Vue 为了使得 DOM 元素得到最大范围的重用而实现了一些智能的启发式方法，所以用一个含有相同元素的数组去替换原来的数组是非常高效的操作。")]),t._v(" "),s("h5",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("p",[t._v("由于 JavaScript 的限制，Vue 不能检测以下数组的变动：")]),t._v(" "),s("ol",[s("li",[t._v("当你利用索引直接设置一个数组项时，例如："),s("code",[t._v("vm.items[indexOfItem] = newValue")])]),t._v(" "),s("li",[t._v("当你修改数组的长度时，例如："),s("code",[t._v("vm.items.length = newLength")])])]),t._v(" "),s("h4",{attrs:{id:"对象变更检测注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象变更检测注意事项"}},[t._v("#")]),t._v(" 对象变更检测注意事项")]),t._v(" "),s("p",[t._v("还是由于 JavaScript 的限制，Vue 不能检测对象属性的添加或删除。对于已经创建的实例，Vue 不允许动态添加根级别的响应式属性。但是，可以使用 "),s("code",[t._v("Vue.set(object, propertyName, value)")]),t._v(" 方法向嵌套对象添加响应式属性。\n有时你可能需要为已有对象赋值多个新属性，比如使用 "),s("code",[t._v("Object.assign()")]),t._v(" 或 "),s("code",[t._v("_.extend()")]),t._v("。在这种情况下，你应该用两个对象的属性创建一个新的对象。所以，如果你想添加新的响应式属性，不要像这样：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userProfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" favoriteColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vue Green'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("你应该这样做：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userProfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userProfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" favoriteColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vue Green'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"显示过滤-排序后的结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示过滤-排序后的结果"}},[t._v("#")]),t._v(" 显示过滤/排序后的结果")]),t._v(" "),s("h4",{attrs:{id:"在-v-for-里使用值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-v-for-里使用值范围"}},[t._v("#")]),t._v(" 在 v-for 里使用值范围")]),t._v(" "),s("p",[s("code",[t._v("v-for")]),t._v(" 也可以接受整数。在这种情况下，它会把模板重复对应次数。")]),t._v(" "),s("h4",{attrs:{id:"在-template-上使用-v-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-template-上使用-v-for"}},[t._v("#")]),t._v(" 在 "),s("code",[t._v("<template>")]),t._v(" 上使用 v-for")]),t._v(" "),s("p",[t._v("类似于 "),s("code",[t._v("v-if")]),t._v("，你也可以利用带有 "),s("code",[t._v("v-for")]),t._v(" 的 "),s("code",[t._v("<template>")]),t._v(" 来循环渲染一段包含多个元素的内容。")]),t._v(" "),s("h4",{attrs:{id:"v-for-与-v-if-一同使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-for-与-v-if-一同使用"}},[t._v("#")]),t._v(" v-for 与 v-if 一同使用")]),t._v(" "),s("h4",{attrs:{id:"在组件上使用-v-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在组件上使用-v-for"}},[t._v("#")]),t._v(" 在组件上使用 v-for")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"事件处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[t._v("#")]),t._v(" 事件处理")]),t._v(" "),s("h4",{attrs:{id:"监听事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听事件"}},[t._v("#")]),t._v(" 监听事件")]),t._v(" "),s("h4",{attrs:{id:"事件处理方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件处理方法"}},[t._v("#")]),t._v(" 事件处理方法")]),t._v(" "),s("h4",{attrs:{id:"内敛处理器中的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内敛处理器中的方法"}},[t._v("#")]),t._v(" 内敛处理器中的方法")]),t._v(" "),s("p",[t._v("有时也需要在内联语句处理器中访问原始的 DOM 事件。可以用特殊变量 $event 把它传入方法")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("warn("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Form cannot be submitted yet."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(", $event)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" Submit "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h4",{attrs:{id:"事件修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件修饰符"}},[t._v("#")]),t._v(" 事件修饰符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".stop")])]),t._v(" "),s("li",[s("code",[t._v(".prevent")])]),t._v(" "),s("li",[s("code",[t._v(".capture")])]),t._v(" "),s("li",[s("code",[t._v(".self")])]),t._v(" "),s("li",[s("code",[t._v(".once")])]),t._v(" "),s("li",[s("code",[t._v(".passive")]),t._v("\n使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 "),s("code",[t._v("v-on:click.prevent.self")]),t._v(" 会阻止所有的点击，而 "),s("code",[t._v("v-on:click.self.prevent")]),t._v(" 只会阻止对元素自身的点击。")])]),t._v(" "),s("blockquote",[s("p",[t._v("2.1.4 新增")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 点击事件将只会触发一次 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click.once")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("不像其它只能对原生的 DOM 事件起作用的修饰符，.once 修饰符还能被用到自定义的组件事件上。如果你还没有阅读关于组件的文档，现在大可不必担心。")]),t._v(" "),s("blockquote",[s("p",[t._v("2.3.0 新增\nVue 还对应 addEventListener 中的 passive 选项提供了 .passive 修饰符。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 而不会等待 `onScroll` 完成 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这其中包含 `event.preventDefault()` 的情况 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("scroll.passive")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("onScroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这个 "),s("code",[t._v(".passive")]),t._v(" 修饰符尤其能够提升移动端的性能。\n不要把 "),s("code",[t._v(".passive")]),t._v(" 和 "),s("code",[t._v(".prevent")]),t._v(" 一起使用，因为 "),s("code",[t._v(".prevent")]),t._v(" 将会被忽略，同时浏览器可能会向你展示一个警告。请记住，"),s("code",[t._v(".passive")]),t._v(" 会告诉浏览器你不想阻止事件的默认行为。")]),t._v(" "),s("h4",{attrs:{id:"按键修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按键修饰符"}},[t._v("#")]),t._v(" 按键修饰符")]),t._v(" "),s("h5",{attrs:{id:"按键码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按键码"}},[t._v("#")]),t._v(" 按键码")]),t._v(" "),s("h4",{attrs:{id:"系统修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统修饰符"}},[t._v("#")]),t._v(" 系统修饰符")]),t._v(" "),s("h5",{attrs:{id:"exact-修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exact-修饰符"}},[t._v("#")]),t._v(" .exact 修饰符")]),t._v(" "),s("h5",{attrs:{id:"鼠标按钮修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鼠标按钮修饰符"}},[t._v("#")]),t._v(" 鼠标按钮修饰符")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"表单输入绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单输入绑定"}},[t._v("#")]),t._v(" 表单输入绑定")]),t._v(" "),s("h4",{attrs:{id:"基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),s("p",[t._v("你可以用 v-model 指令在表单 "),s("code",[t._v("<input>")]),t._v("、"),s("code",[t._v("<textarea>")]),t._v(" 及 "),s("code",[t._v("<select>")]),t._v(" 元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 v-model 本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。\n!"),s("code",[t._v("v-model")]),t._v(" 会忽略所有表单元素的 "),s("code",[t._v("value")]),t._v("、"),s("code",[t._v("checked")]),t._v("、"),s("code",[t._v("selected")]),t._v(" 特性的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript 在组件的 data 选项中声明初始值。\nv-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：")]),t._v(" "),s("ul",[s("li",[t._v("text 和 textarea 元素使用 value 属性和 input 事件；")]),t._v(" "),s("li",[t._v("checkbox 和 radio 使用 checked 属性和 change 事件；")]),t._v(" "),s("li",[t._v("select 字段将 value 作为 prop 并将 change 作为事件。\n!对于需要使用输入法 (如中文、日文、韩文等) 的语言，你会发现 v-model 不会在输入法组合文字过程中得到更新。如果你也想处理这个过程，请使用 input 事件。")])]),t._v(" "),s("h5",{attrs:{id:"文本-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本-2"}},[t._v("#")]),t._v(" 文本")]),t._v(" "),s("h5",{attrs:{id:"多行文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多行文本"}},[t._v("#")]),t._v(" 多行文本")]),t._v(" "),s("h5",{attrs:{id:"复选框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复选框"}},[t._v("#")]),t._v(" 复选框")]),t._v(" "),s("h5",{attrs:{id:"单选按钮"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单选按钮"}},[t._v("#")]),t._v(" 单选按钮")]),t._v(" "),s("h5",{attrs:{id:"选择框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择框"}},[t._v("#")]),t._v(" 选择框")]),t._v(" "),s("p",[t._v("!如果 v-model 表达式的初始值未能匹配任何选项，"),s("code",[t._v("<select>")]),t._v(" 元素将被渲染为“未选中”状态。在 iOS 中，这会使用户无法选择第一个选项。因为这样的情况下，iOS 不会触发 change 事件。因此，更推荐像上面这样提供一个值为空的禁用选项。")]),t._v(" "),s("h4",{attrs:{id:"值绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#值绑定"}},[t._v("#")]),t._v(" 值绑定")]),t._v(" "),s("h5",{attrs:{id:"复选框-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复选框-2"}},[t._v("#")]),t._v(" 复选框")]),t._v(" "),s("h5",{attrs:{id:"单选按钮-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单选按钮-2"}},[t._v("#")]),t._v(" 单选按钮")]),t._v(" "),s("h5",{attrs:{id:"选择框的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择框的选项"}},[t._v("#")]),t._v(" 选择框的选项")]),t._v(" "),s("h4",{attrs:{id:"修饰符-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修饰符-2"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),s("h5",{attrs:{id:"lazy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lazy"}},[t._v("#")]),t._v(" .lazy")]),t._v(" "),s("h5",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" .number")]),t._v(" "),s("h5",{attrs:{id:"trim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trim"}},[t._v("#")]),t._v(" .trim")]),t._v(" "),s("h4",{attrs:{id:"在组件上使用v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在组件上使用v-model"}},[t._v("#")]),t._v(" 在组件上使用v-model")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"组件基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件基础"}},[t._v("#")]),t._v(" 组件基础")]),t._v(" "),s("h4",{attrs:{id:"基本示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本示例"}},[t._v("#")]),t._v(" 基本示例")]),t._v(" "),s("h4",{attrs:{id:"组件的复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件的复用"}},[t._v("#")]),t._v(" 组件的复用")]),t._v(" "),s("h5",{attrs:{id:"data必须是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data必须是一个函数"}},[t._v("#")]),t._v(" data必须是一个函数")]),t._v(" "),s("p",[t._v("一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝。")]),t._v(" "),s("h4",{attrs:{id:"组件的组织"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件的组织"}},[t._v("#")]),t._v(" 组件的组织")]),t._v(" "),s("h4",{attrs:{id:"通过-prop-向子组件传递数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-prop-向子组件传递数据"}},[t._v("#")]),t._v(" 通过 Prop 向子组件传递数据")]),t._v(" "),s("h4",{attrs:{id:"单个根元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单个根元素"}},[t._v("#")]),t._v(" 单个根元素")]),t._v(" "),s("h4",{attrs:{id:"监听子组件事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听子组件事件"}},[t._v("#")]),t._v(" 监听子组件事件")]),t._v(" "),s("h5",{attrs:{id:"使用事件抛出一个值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用事件抛出一个值"}},[t._v("#")]),t._v(" 使用事件抛出一个值")]),t._v(" "),s("h5",{attrs:{id:"在组件上使用-v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在组件上使用-v-model"}},[t._v("#")]),t._v(" 在组件上使用 v-model")]),t._v(" "),s("p",[t._v("自定义事件也可以用于创建支持 v-model 的自定义输入组件。记住：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("等价于：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText = $event.target.value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("当用在组件上时，v-model 则会这样：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("custom-input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText = $event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("custom-input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("为了让它正常工作，这个组件内的 "),s("code",[t._v("<input>")]),t._v(" 必须：")]),t._v(" "),s("ul",[s("li",[t._v("将其 value 特性绑定到一个名叫 value 的 prop 上")]),t._v(" "),s("li",[t._v("在其 input 事件被触发时，将新的值通过自定义的 input 事件抛出\n写成代码之后是这样的：")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-input'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' <input v-bind:value="value"      v-on:input="$emit(\'input\', $event.target.value)"    > ')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("现在 v-model 就应该可以在这个组件上完美地工作起来了：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("custom-input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("searchText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("custom-input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h4",{attrs:{id:"通过插槽分发内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过插槽分发内容"}},[t._v("#")]),t._v(" 通过插槽分发内容")]),t._v(" "),s("h4",{attrs:{id:"动态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态组件"}},[t._v("#")]),t._v(" 动态组件")]),t._v(" "),s("h4",{attrs:{id:"解析-dom-模板时的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析-dom-模板时的注意事项"}},[t._v("#")]),t._v(" 解析 DOM 模板时的注意事项")]),t._v(" "),s("p",[t._v("有些 HTML 元素，诸如 "),s("code",[t._v("<ul>")]),t._v("、"),s("code",[t._v("<ol>")]),t._v("、"),s("code",[t._v("<table>")]),t._v(" 和 "),s("code",[t._v("<select>")]),t._v("，对于哪些元素可以出现在其内部是有严格限制的。而有些元素，诸如 "),s("code",[t._v("<li>")]),t._v("、"),s("code",[t._v("<tr>")]),t._v(" 和 "),s("code",[t._v("<option>")]),t._v("，只能出现在其它某些特定的元素内部。\n这会导致我们使用这些有约束条件的元素时遇到一些问题。例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("blog-post-row")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("blog-post-row")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这个自定义组件 "),s("code",[t._v("<blog-post-row>")]),t._v(" 会被作为无效的内容提升到外部，并导致最终渲染结果出错。幸好这个特殊的 "),s("code",[t._v("is")]),t._v(" 特性给了我们一个变通的办法：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("tr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("blog-post-row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("需要注意的是"),s("strong",[t._v("如果我们从以下来源使用模板的话，这条限制是"),s("em",[t._v("不存在")]),t._v("的")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("字符串 (例如："),s("code",[t._v("template: '...'")]),t._v(")")]),t._v(" "),s("li",[t._v("单文件组件 ("),s("code",[t._v(".vue")]),t._v(")")]),t._v(" "),s("li",[s("code",[t._v('<script type="text/x-template">')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);