(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{436:function(t,e,r){"use strict";r.r(e);var o=r(42),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" 🤔Object")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#语法"}},[t._v("语法")])]),r("li",[r("a",{attrs:{href:"#参数"}},[t._v("参数")])]),r("li",[r("a",{attrs:{href:"#描述"}},[t._v("描述")])]),r("li",[r("a",{attrs:{href:"#object-构造函数的属性"}},[t._v("Object 构造函数的属性")]),r("ul",[r("li",[r("a",{attrs:{href:"#object-length"}},[t._v("Object.length")])]),r("li",[r("a",{attrs:{href:"#object-prototype"}},[t._v("Object.prototype")])])])]),r("li",[r("a",{attrs:{href:"#object-构造函数的方法"}},[t._v("Object 构造函数的方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#object-assign"}},[t._v("Object.assign()")])]),r("li",[r("a",{attrs:{href:"#object-create"}},[t._v("Object.create()")])]),r("li",[r("a",{attrs:{href:"#object-defineproperty"}},[t._v("Object.defineProperty()")])]),r("li",[r("a",{attrs:{href:"#object-defineproperties"}},[t._v("Object.defineProperties()")])]),r("li",[r("a",{attrs:{href:"#object-entries"}},[t._v("Object.entries()")])]),r("li",[r("a",{attrs:{href:"#object-freeze"}},[t._v("Object.freeze()")])]),r("li",[r("a",{attrs:{href:"#object-getownpropertydescriptor"}},[t._v("Object.getOwnPropertyDescriptor()")])]),r("li",[r("a",{attrs:{href:"#object-getownpropertynames"}},[t._v("Object.getOwnPropertyNames()")])]),r("li",[r("a",{attrs:{href:"#object-getownpropertysymbols"}},[t._v("Object.getOwnPropertySymbols()")])]),r("li",[r("a",{attrs:{href:"#object-getprototypeof"}},[t._v("Object.getPrototypeOf()")])]),r("li",[r("a",{attrs:{href:"#object-is"}},[t._v("Object.is()")])]),r("li",[r("a",{attrs:{href:"#object-isextensible"}},[t._v("Object.isExtensible()")])]),r("li",[r("a",{attrs:{href:"#object-isfrozen"}},[t._v("Object.isFrozen()")])]),r("li",[r("a",{attrs:{href:"#object-issealed"}},[t._v("Object.isSealed()")])]),r("li",[r("a",{attrs:{href:"#object-keys"}},[t._v("Object.keys()")])]),r("li",[r("a",{attrs:{href:"#object-preventextensions"}},[t._v("Object.preventExtensions()")])]),r("li",[r("a",{attrs:{href:"#object-seal"}},[t._v("Object.seal()")])]),r("li",[r("a",{attrs:{href:"#object-setprototypeof"}},[t._v("Object.setPrototypeOf()")])]),r("li",[r("a",{attrs:{href:"#object-values"}},[t._v("Object.values()")])])])]),r("li",[r("a",{attrs:{href:"#object-实例和-object-原型对象"}},[t._v("Object 实例和 Object 原型对象")])]),r("li",[r("a",{attrs:{href:"#属性"}},[t._v("属性")]),r("ul",[r("li",[r("a",{attrs:{href:"#object-prototype-constructor"}},[t._v("Object.prototype.constructor")])]),r("li",[r("a",{attrs:{href:"#object-prototype-proto"}},[t._v("Object.prototype.__proto__")])]),r("li",[r("a",{attrs:{href:"#object-prototype-nosuchmethod"}},[t._v("Object.prototype.__noSuchMethod__")])]),r("li",[r("a",{attrs:{href:"#object-prototype-count"}},[t._v("Object.prototype.__count__")])]),r("li",[r("a",{attrs:{href:"#object-prototype-parent"}},[t._v("Object.prototype.__parent__")])])])]),r("li",[r("a",{attrs:{href:"#方法"}},[t._v("方法")]),r("ul",[r("li",[r("a",{attrs:{href:"#object-prototype-definegetter"}},[t._v("Object.prototype.__defineGetter__()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-definesetter"}},[t._v("Object.prototype.__defineSetter__()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-lookupgetter"}},[t._v("Object.prototype.__lookupGetter__()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-lookupsetter"}},[t._v("Object.prototype.__lookupSetter__()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-hasownproperty"}},[t._v("Object.prototype.hasOwnProperty()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-isprototypeof"}},[t._v("Object.prototype.isPrototypeOf()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-propertyisenumerable"}},[t._v("Object.prototype.propertyIsEnumerable()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-tosource"}},[t._v("Object.prototype.toSource()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-tolocalestring"}},[t._v("Object.prototype.toLocaleString()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-tostring"}},[t._v("Object.prototype.toString()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-unwatch"}},[t._v("Object.prototype.unwatch()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-valueof"}},[t._v("Object.prototype.valueOf()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-watch"}},[t._v("Object.prototype.watch()")])]),r("li",[r("a",{attrs:{href:"#object-prototype-eval"}},[t._v("Object.prototype.eval()")])])])])])]),r("p"),t._v(" "),r("p",[t._v("Object 构造函数创建一个对象包装器。")]),t._v(" "),r("h2",{attrs:{id:"语法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象初始化器（Object initialiser）或对象字面量（literal）")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" nameValuePair1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nameValuePair2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("nameValuePairN"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以构造函数形式来调用")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h2",{attrs:{id:"参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("nameValuePair1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nameValuePair2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" nameValuePairN\n")])])]),r("h2",{attrs:{id:"描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),r("p",[t._v("在JavaScript中，几乎所有的对象都是Object类型的实例，它们都会从Object.prototype继承属性和方法。Object 构造函数为给定值创建一个对象包装器。Object构造函数，会根据给定的参数创建对象，具体有以下情况：")]),t._v(" "),r("ul",[r("li",[t._v("如果给定值是 null 或 undefined，将会创建并返回一个空对象")]),t._v(" "),r("li",[t._v("如果传进去的是一个基本类型的值，则会构造其包装类型的对象")]),t._v(" "),r("li",[t._v("如果传进去的是引用类型的值，仍然会返回这个值，经他们复制的变量保有和源对象相同的引用地址")]),t._v(" "),r("li",[t._v("当以非构造函数形式被调用时，Object 的行为等同于 new Object()。")])]),t._v(" "),r("h2",{attrs:{id:"object-构造函数的属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-构造函数的属性"}},[t._v("#")]),t._v(" Object 构造函数的属性")]),t._v(" "),r("h3",{attrs:{id:"object-length"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-length"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.length")])]),t._v(" "),r("p",[t._v("值为 1。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype")])]),t._v(" "),r("p",[t._v("可以为所有 Object 类型的对象添加属性。")]),t._v(" "),r("h2",{attrs:{id:"object-构造函数的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-构造函数的方法"}},[t._v("#")]),t._v(" Object 构造函数的方法")]),t._v(" "),r("h3",{attrs:{id:"object-assign"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-assign"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.assign()")])]),t._v(" "),r("p",[t._v("通过复制一个或多个对象来创建一个新的对象。")]),t._v(" "),r("h3",{attrs:{id:"object-create"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-create"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.create()")])]),t._v(" "),r("p",[t._v("使用指定的原型对象和属性创建一个新对象。")]),t._v(" "),r("h3",{attrs:{id:"object-defineproperty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.defineProperty()")])]),t._v(" "),r("p",[t._v("给对象添加一个属性并指定该属性的配置。")]),t._v(" "),r("h3",{attrs:{id:"object-defineproperties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperties"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.defineProperties()")])]),t._v(" "),r("p",[t._v("给对象添加多个属性并分别指定它们的配置。")]),t._v(" "),r("h3",{attrs:{id:"object-entries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-entries"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.entries()")])]),t._v(" "),r("p",[t._v("返回给定对象自身可枚举属性的 [key, value] 数组。")]),t._v(" "),r("h3",{attrs:{id:"object-freeze"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-freeze"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.freeze()")])]),t._v(" "),r("p",[t._v("冻结对象：其他代码不能删除或更改任何属性。")]),t._v(" "),r("h3",{attrs:{id:"object-getownpropertydescriptor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertydescriptor"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.getOwnPropertyDescriptor()")])]),t._v(" "),r("p",[t._v("返回对象指定的属性配置。")]),t._v(" "),r("h3",{attrs:{id:"object-getownpropertynames"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertynames"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.getOwnPropertyNames()")])]),t._v(" "),r("p",[t._v("返回一个数组，它包含了指定对象所有的可枚举或不可枚举的属性名。")]),t._v(" "),r("h3",{attrs:{id:"object-getownpropertysymbols"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertysymbols"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.getOwnPropertySymbols()")])]),t._v(" "),r("p",[t._v("返回一个数组，它包含了指定对象自身所有的符号属性。")]),t._v(" "),r("h3",{attrs:{id:"object-getprototypeof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getprototypeof"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.getPrototypeOf()")])]),t._v(" "),r("p",[t._v("返回指定对象的原型对象。")]),t._v(" "),r("h3",{attrs:{id:"object-is"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.is()")])]),t._v(" "),r("p",[t._v("比较两个值是否相同。所有 NaN 值都相等（这与==和===不同）。")]),t._v(" "),r("h3",{attrs:{id:"object-isextensible"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-isextensible"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.isExtensible()")])]),t._v(" "),r("p",[t._v("判断对象是否可扩展。")]),t._v(" "),r("h3",{attrs:{id:"object-isfrozen"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-isfrozen"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.isFrozen()")])]),t._v(" "),r("p",[t._v("判断对象是否已经冻结。")]),t._v(" "),r("h3",{attrs:{id:"object-issealed"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-issealed"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.isSealed()")])]),t._v(" "),r("p",[t._v("判断对象是否已经密封。")]),t._v(" "),r("h3",{attrs:{id:"object-keys"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-keys"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.keys()")])]),t._v(" "),r("p",[t._v("返回一个包含所有给定对象自身可枚举属性名称的数组。")]),t._v(" "),r("h3",{attrs:{id:"object-preventextensions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-preventextensions"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.preventExtensions()")])]),t._v(" "),r("p",[t._v("防止对象的任何扩展。")]),t._v(" "),r("h3",{attrs:{id:"object-seal"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-seal"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.seal()")])]),t._v(" "),r("p",[t._v("防止其他代码删除对象的属性。")]),t._v(" "),r("h3",{attrs:{id:"object-setprototypeof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-setprototypeof"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.setPrototypeOf()")])]),t._v(" "),r("p",[t._v("设置对象的原型（即内部 [[Prototype]] 属性）。")]),t._v(" "),r("h3",{attrs:{id:"object-values"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-values"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.values()")])]),t._v(" "),r("p",[t._v("返回给定对象自身可枚举值的数组。")]),t._v(" "),r("h2",{attrs:{id:"object-实例和-object-原型对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-实例和-object-原型对象"}},[t._v("#")]),t._v(" Object 实例和 Object 原型对象")]),t._v(" "),r("p",[t._v("JavaScript中的所有对象都来自 Object；所有对象从Object.prototype继承方法和属性，尽管它们可能被覆盖。例如，其他构造函数的原型将覆盖 constructor 属性并提供自己的 toString() 方法。Object 原型对象的更改将传播到所有对象，除非受到这些更改的属性和方法将沿原型链进一步覆盖。")]),t._v(" "),r("h2",{attrs:{id:"属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-constructor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-constructor"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.constructor")])]),t._v(" "),r("p",[t._v("特定的函数，用于创建一个对象的原型。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-proto"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-proto"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__proto__")])]),t._v(" "),r("p",[t._v("指向当对象被实例化的时候，用作原型的对象。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-nosuchmethod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-nosuchmethod"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__noSuchMethod__")])]),t._v(" "),r("p",[t._v("当未定义的对象成员被调用作方法的时候，允许定义并执行的函数。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-count"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-count"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__count__")])]),t._v(" "),r("p",[t._v("用于直接返回用户定义的对象中可数的属性的数量。已被废除。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-parent"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-parent"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__parent__")])]),t._v(" "),r("p",[t._v("用于指向对象的内容。已被废除。")]),t._v(" "),r("h2",{attrs:{id:"方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-definegetter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-definegetter"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__defineGetter__()")])]),t._v(" "),r("p",[t._v("关联一个函数到一个属性。访问该函数时，执行该函数并返回其返回值。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-definesetter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-definesetter"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__defineSetter__()")])]),t._v(" "),r("p",[t._v("关联一个函数到一个属性。设置该函数时，执行该修改属性的函数。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-lookupgetter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-lookupgetter"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__lookupGetter__()")])]),t._v(" "),r("p",[t._v("返回使用 "),r("code",[t._v("__defineGetter__")]),t._v(" 定义的方法函数 。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-lookupsetter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-lookupsetter"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.__lookupSetter__()")])]),t._v(" "),r("p",[t._v("返回使用 "),r("code",[t._v("__defineSetter__")]),t._v(" 定义的方法函数。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-hasownproperty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-hasownproperty"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.hasOwnProperty()")])]),t._v(" "),r("p",[t._v("返回一个布尔值 ，表示某个对象是否含有指定的属性，而且此属性非原型链继承的。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-isprototypeof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-isprototypeof"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.isPrototypeOf()")])]),t._v(" "),r("p",[t._v("返回一个布尔值，表示指定的对象是否在本对象的原型链中。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-propertyisenumerable"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-propertyisenumerable"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.propertyIsEnumerable()")])]),t._v(" "),r("p",[t._v("判断指定属性是否可枚举，内部属性设置参见 ECMAScript [[Enumerable]] attribute 。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-tosource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tosource"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.toSource()")])]),t._v(" "),r("p",[t._v("返回字符串表示此对象的源代码形式，可以使用此字符串生成一个新的相同的对象。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-tolocalestring"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tolocalestring"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.toLocaleString()")])]),t._v(" "),r("p",[t._v("直接调用 toString()方法。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-tostring"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tostring"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.toString()")])]),t._v(" "),r("p",[t._v("返回对象的字符串表示。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-unwatch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-unwatch"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.unwatch()")])]),t._v(" "),r("p",[t._v("移除对象某个属性的监听。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-valueof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-valueof"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.valueOf()")])]),t._v(" "),r("p",[t._v("返回指定对象的原始值。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-watch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-watch"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.watch()")])]),t._v(" "),r("p",[t._v("给对象的某个属性增加监听。")]),t._v(" "),r("h3",{attrs:{id:"object-prototype-eval"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-eval"}},[t._v("#")]),t._v(" "),r("code",[t._v("Object.prototype.eval()")])]),t._v(" "),r("p",[t._v("在指定对象为上下文情况下执行javascript字符串代码，已经废弃。")])])}),[],!1,null,null,null);e.default=a.exports}}]);