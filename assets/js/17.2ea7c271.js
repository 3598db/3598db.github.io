(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{372:function(t,a,r){"use strict";r.r(a);var e=r(42),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"开放问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开放问题"}},[t._v("#")]),t._v(" 🤔开放问题")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#在nodejs开发的时候-处理过什么windows和mac的平台兼容性问题"}},[t._v("在nodejs开发的时候 处理过什么windows和mac的平台兼容性问题")])]),r("li",[r("a",{attrs:{href:"#设计一个方案-在浏览器中点击一个button-然后能在你的前端项目源码文件中增加一个index-js文件-如何实现-提供思路"}},[t._v("设计一个方案，在浏览器中点击一个button，然后能在你的前端项目源码文件中增加一个index.js文件，如何实现？提供思路")])]),r("li",[r("a",{attrs:{href:"#如果一个实习生-他本地git的a分支被误删了-a分支代码没有被push到远程-如何找到之前a的提交记录和代码"}},[t._v("如果一个实习生，他本地git的A分支被误删了， A分支代码没有被push到远程，如何找到之前A的提交记录和代码")])]),r("li",[r("a",{attrs:{href:"#如果你用nodejs实现的爬虫服务器的ip被指定网站封了-如何解封"}},[t._v("如果你用nodejs实现的爬虫服务器的IP被指定网站封了，如何解封？")])]),r("li",[r("a",{attrs:{href:"#用nodejs-将base64转化成png文件"}},[t._v("用nodejs，将base64转化成png文件")])]),r("li",[r("a",{attrs:{href:"#请设计一个方案-有a、b、c三个npm插件-它们会经常更新-在前端项目npm-run-start启动后-要求a、b、c三个npm插件自动更新到最新版本"}},[t._v("请设计一个方案：有a、b、c三个npm插件，它们会经常更新，在前端项目npm run start启动后，要求a、b、c三个npm插件自动更新到最新版本")])]),r("li",[r("a",{attrs:{href:"#大文件转存问题-服务器a有一个1000g的文件-需要通过服务端b转发到服务端c-但是服务器b内存只有1个g-怎么去实现这个大文件转存"}},[t._v("大文件转存问题：服务器A有一个1000G的文件， 需要通过服务端B转发到服务端C，但是服务器B内存只有1个g， 怎么去实现这个大文件转存")])]),r("li",[r("a",{attrs:{href:"#如何实现内网穿透-端口转发了解一下"}},[t._v("如何实现内网穿透，端口转发了解一下？")])]),r("li",[r("a",{attrs:{href:"#请设计一个攻击服务器的策略"}},[t._v("请设计一个攻击服务器的策略")])]),r("li",[r("a",{attrs:{href:"#请写一个正则-去除掉html标签字符串里的所有属性-并保留src和href两种属性"}},[t._v("请写一个正则，去除掉html标签字符串里的所有属性，并保留src和href两种属性")])]),r("li",[r("a",{attrs:{href:"#react项目中-constructor-this-target-this-func-bind-this-jsx里onchange-this-target-的写法-为什么要比非bind的func-的写法效率高-请解释其中的原理"}},[t._v("react项目中，constructor(){ this.target = this.func.bind(this); },JSX里onChange={this.target}的写法，为什么要比非bind的func = () => {}的写法效率高 请解释其中的原理")])]),r("li",[r("a",{attrs:{href:"#设计一个策略和方法-实现在https的前端项目里进行http请求"}},[t._v("设计一个策略和方法，实现在https的前端项目里进行http请求")])]),r("li",[r("a",{attrs:{href:"#现在有多个spa的项目-有angular的-有vue的和react的-如何将他们合并成一个大统一的spa项目"}},[t._v("现在有多个spa的项目，有angular的，有vue的和react的，如何将他们合并成一个大统一的spa项目")])]),r("li",[r("a",{attrs:{href:"#讲一下png8-png16-png32的区别-并简单讲讲png的压缩原理"}},[t._v("讲一下png8 png16 png32的区别，并简单讲讲png的压缩原理")])]),r("li",[r("a",{attrs:{href:"#一个iframe-内嵌了一个a页面-iframe的宽高不停变化-如何让a页面的宽高实时自适应这个iframe的宽高大小。请说出至少3种方法-越难越好"}},[t._v("一个iframe，内嵌了一个A页面，iframe的宽高不停变化，如何让A页面的宽高实时自适应这个iframe的宽高大小。请说出至少3种方法，越难越好")])]),r("li",[r("a",{attrs:{href:"#前端如何进行seo优化"}},[t._v("前端如何进行seo优化")])]),r("li",[r("a",{attrs:{href:"#前后端分离的项目如何seo"}},[t._v("前后端分离的项目如何seo")])]),r("li",[r("a",{attrs:{href:"#_1000-div问题"}},[t._v("1000-div问题")])]),r("li",[r("a",{attrs:{href:"#开放题-2万小球问题-在浏览器端-用js存储2万个小球的信息-包含小球的大小-位置-颜色等-如何做到对这2万条小球信息进行最优检索和存储"}},[t._v("（开放题）2万小球问题：在浏览器端，用js存储2万个小球的信息，包含小球的大小，位置，颜色等，如何做到对这2万条小球信息进行最优检索和存储")])]),r("li",[r("a",{attrs:{href:"#开放题-接上一题如何尽可能流畅的实现这2万小球在浏览器中-以直线运动的动效显示出来"}},[t._v("（开放题）接上一题如何尽可能流畅的实现这2万小球在浏览器中，以直线运动的动效显示出来")])]),r("li",[r("a",{attrs:{href:"#开放题-100亿排序问题-内存不足-一次只允许你装载和操作1亿条数据-如何对100亿条数据进行排序。"}},[t._v("（开放题）100亿排序问题：内存不足，一次只允许你装载和操作1亿条数据，如何对100亿条数据进行排序。")])]),r("li",[r("a",{attrs:{href:"#开放题-a-b-c-d-和-a-b-c-d-哪个性能更高"}},[t._v("（开放题）a.b.c.d和a['b']['c']['d']，哪个性能更高")])]),r("li",[r("a",{attrs:{href:"#git时光机问题"}},[t._v("git时光机问题")])])])]),r("p"),t._v(" "),r("h2",{attrs:{id:"在nodejs开发的时候-处理过什么windows和mac的平台兼容性问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在nodejs开发的时候-处理过什么windows和mac的平台兼容性问题"}},[t._v("#")]),t._v(" 在nodejs开发的时候 处理过什么windows和mac的平台兼容性问题")]),t._v(" "),r("h2",{attrs:{id:"设计一个方案-在浏览器中点击一个button-然后能在你的前端项目源码文件中增加一个index-js文件-如何实现-提供思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计一个方案-在浏览器中点击一个button-然后能在你的前端项目源码文件中增加一个index-js文件-如何实现-提供思路"}},[t._v("#")]),t._v(" 设计一个方案，在浏览器中点击一个button，然后能在你的前端项目源码文件中增加一个index.js文件，如何实现？提供思路")]),t._v(" "),r("h2",{attrs:{id:"如果一个实习生-他本地git的a分支被误删了-a分支代码没有被push到远程-如何找到之前a的提交记录和代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果一个实习生-他本地git的a分支被误删了-a分支代码没有被push到远程-如何找到之前a的提交记录和代码"}},[t._v("#")]),t._v(" 如果一个实习生，他本地git的A分支被误删了， A分支代码没有被push到远程，如何找到之前A的提交记录和代码")]),t._v(" "),r("h2",{attrs:{id:"如果你用nodejs实现的爬虫服务器的ip被指定网站封了-如何解封"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果你用nodejs实现的爬虫服务器的ip被指定网站封了-如何解封"}},[t._v("#")]),t._v(" 如果你用nodejs实现的爬虫服务器的IP被指定网站封了，如何解封？")]),t._v(" "),r("h2",{attrs:{id:"用nodejs-将base64转化成png文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用nodejs-将base64转化成png文件"}},[t._v("#")]),t._v(" 用nodejs，将base64转化成png文件")]),t._v(" "),r("h2",{attrs:{id:"请设计一个方案-有a、b、c三个npm插件-它们会经常更新-在前端项目npm-run-start启动后-要求a、b、c三个npm插件自动更新到最新版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请设计一个方案-有a、b、c三个npm插件-它们会经常更新-在前端项目npm-run-start启动后-要求a、b、c三个npm插件自动更新到最新版本"}},[t._v("#")]),t._v(" 请设计一个方案：有a、b、c三个npm插件，它们会经常更新，在前端项目npm run start启动后，要求a、b、c三个npm插件自动更新到最新版本")]),t._v(" "),r("h2",{attrs:{id:"大文件转存问题-服务器a有一个1000g的文件-需要通过服务端b转发到服务端c-但是服务器b内存只有1个g-怎么去实现这个大文件转存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#大文件转存问题-服务器a有一个1000g的文件-需要通过服务端b转发到服务端c-但是服务器b内存只有1个g-怎么去实现这个大文件转存"}},[t._v("#")]),t._v(" 大文件转存问题：服务器A有一个1000G的文件， 需要通过服务端B转发到服务端C，但是服务器B内存只有1个g， 怎么去实现这个大文件转存")]),t._v(" "),r("h2",{attrs:{id:"如何实现内网穿透-端口转发了解一下"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何实现内网穿透-端口转发了解一下"}},[t._v("#")]),t._v(" 如何实现内网穿透，端口转发了解一下？")]),t._v(" "),r("h2",{attrs:{id:"请设计一个攻击服务器的策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请设计一个攻击服务器的策略"}},[t._v("#")]),t._v(" 请设计一个攻击服务器的策略")]),t._v(" "),r("h2",{attrs:{id:"请写一个正则-去除掉html标签字符串里的所有属性-并保留src和href两种属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请写一个正则-去除掉html标签字符串里的所有属性-并保留src和href两种属性"}},[t._v("#")]),t._v(" 请写一个正则，去除掉html标签字符串里的所有属性，并保留src和href两种属性")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("html.replace(/<([\\w-]+)(?=\\s)(?=[^>]*?(\\shref=(['\"]).*?\\3)?)(?=[^>]*?(\\ssrc=(['\"]).*?\\5)?)[^>]*/g, '<$1$2$4')")])]),t._v(" "),r("li",[t._v("匹配标签的属性内容："),r("code",[t._v("<([\\w-]+)(.*?)>")])]),t._v(" "),r("li",[t._v("匹配对应每项属性："),r("code",[t._v("\\s?([\\w-]+)=['\"]?[\\w-\\s]+['\"]?")])]),t._v(" "),r("li",[t._v("vue: "),r("code",[t._v("/\\s(?!href=|src=)[^\\s\"'<>/=]+(?:\\s*(=)\\s*(?:\"([^\"])\"+|'([^'])'+|([^\\s\"'=<>")]),t._v("]+)))?/g")])]),t._v(" "),r("h2",{attrs:{id:"react项目中-constructor-this-target-this-func-bind-this-jsx里onchange-this-target-的写法-为什么要比非bind的func-的写法效率高-请解释其中的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react项目中-constructor-this-target-this-func-bind-this-jsx里onchange-this-target-的写法-为什么要比非bind的func-的写法效率高-请解释其中的原理"}},[t._v("#")]),t._v(" react项目中，constructor(){ this.target = this.func.bind(this); },JSX里onChange={this.target}的写法，为什么要比非bind的func = () => {}的写法效率高 请解释其中的原理")]),t._v(" "),r("h2",{attrs:{id:"设计一个策略和方法-实现在https的前端项目里进行http请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计一个策略和方法-实现在https的前端项目里进行http请求"}},[t._v("#")]),t._v(" 设计一个策略和方法，实现在https的前端项目里进行http请求")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("其中提到，"),r("code",[t._v("<audio>")]),t._v(" "),r("code",[t._v("<img>")]),t._v(" "),r("code",[t._v("<video>")]),t._v(" "),r("code",[t._v("<object>")]),t._v(" 的 http请求 被认为是被动，不能改变网页的其他部分。然而 "),r("code",[t._v("<script>")]),t._v(" "),r("code",[t._v("<link>")]),t._v(" "),r("code",[t._v("XMLHttpRequest")]),t._v(" "),r("code",[t._v("<iframe>")]),t._v(" css 中的 url 方法 "),r("code",[t._v("<object>")]),t._v(" 的data属性 属于主动活动内容，可以改变原页面的内容，窃取敏感数据，容易收到攻击。")])]),t._v(" "),r("li",[r("p",[t._v("对应的，在 "),r("a",{attrs:{href:"https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是混合内容？ | Web | Google Developers"),r("OutboundLink")],1),t._v("一文中已经做了相关实验，测试了主动和被动的混合内容")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("<script>")]),t._v(" 均默认阻止")]),t._v(" "),r("li",[r("code",[t._v("XMLHttpRequest")]),t._v(" 阻止")]),t._v(" "),r("li",[r("code",[t._v("<a>")]),t._v(" 不会产生混合内容")]),t._v(" "),r("li",[r("code",[t._v("<img>")]),t._v(" 仍会加载混合内容图像，但也会向用户显示警告")])])])]),t._v(" "),r("h2",{attrs:{id:"现在有多个spa的项目-有angular的-有vue的和react的-如何将他们合并成一个大统一的spa项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#现在有多个spa的项目-有angular的-有vue的和react的-如何将他们合并成一个大统一的spa项目"}},[t._v("#")]),t._v(" 现在有多个spa的项目，有angular的，有vue的和react的，如何将他们合并成一个大统一的spa项目")]),t._v(" "),r("ul",[r("li",[t._v("利用mobx，状态和逻辑通用，将三大框架降级为纯渲染框架，后期考虑实现模板互转")])]),t._v(" "),r("h2",{attrs:{id:"讲一下png8-png16-png32的区别-并简单讲讲png的压缩原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#讲一下png8-png16-png32的区别-并简单讲讲png的压缩原理"}},[t._v("#")]),t._v(" 讲一下png8 png16 png32的区别，并简单讲讲png的压缩原理")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.im/post/6844903798658318343",target:"_blank",rel:"noopener noreferrer"}},[t._v("PNG图片压缩原理解析"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"一个iframe-内嵌了一个a页面-iframe的宽高不停变化-如何让a页面的宽高实时自适应这个iframe的宽高大小。请说出至少3种方法-越难越好"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一个iframe-内嵌了一个a页面-iframe的宽高不停变化-如何让a页面的宽高实时自适应这个iframe的宽高大小。请说出至少3种方法-越难越好"}},[t._v("#")]),t._v(" 一个iframe，内嵌了一个A页面，iframe的宽高不停变化，如何让A页面的宽高实时自适应这个iframe的宽高大小。请说出至少3种方法，越难越好")]),t._v(" "),r("h2",{attrs:{id:"前端如何进行seo优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端如何进行seo优化"}},[t._v("#")]),t._v(" 前端如何进行seo优化")]),t._v(" "),r("ul",[r("li",[t._v("合理的title、description、keywords：搜索对着三项的权重逐个减小，title值强调重点即可；description把页面内容高度概括，不可过分堆砌关键词；keywords列举出重要关键词。")]),t._v(" "),r("li",[t._v("语义化的HTML代码，符合W3C规范：语义化代码让搜索引擎容易理解网页")]),t._v(" "),r("li",[t._v("重要内容HTML代码放在最前：搜索引擎抓取HTML顺序是从上到下，保证重要内容一定会被抓取")]),t._v(" "),r("li",[t._v("重要内容不要用js输出：爬虫不会执行js获取内容")]),t._v(" "),r("li",[t._v("少用iframe：搜索引擎不会抓取iframe中的内容")]),t._v(" "),r("li",[t._v("非装饰性图片必须加alt")]),t._v(" "),r("li",[t._v("提高网站速度：网站速度是搜索引擎排序的一个重要指标")])]),t._v(" "),r("h2",{attrs:{id:"前后端分离的项目如何seo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离的项目如何seo"}},[t._v("#")]),t._v(" 前后端分离的项目如何seo")]),t._v(" "),r("ul",[r("li",[t._v("使用prerender。但是回答prerender，面试官肯定会问你，如果不用prerender，让你直接去实现，好的，请看下面的第二个答案。")]),t._v(" "),r("li",[t._v("先去 www.baidu.com/robots.txt 找出常见的爬虫，然后在nginx上判断来访问页面用户的User-Agent是否是爬虫，如果是爬虫，就用nginx方向代理到我们自己用nodejs + puppeteer实现的爬虫服务器上，然后用你的爬虫服务器爬自己的前后端分离的前端项目页面，增加扒页面的接收延时，保证异步渲染的接口数据返回，最后得到了页面的数据，返还给来访问的爬虫即可。")])]),t._v(" "),r("h2",{attrs:{id:"_1000-div问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1000-div问题"}},[t._v("#")]),t._v(" 1000-div问题")]),t._v(" "),r("ul",[r("li",[t._v("一次性插入1000个div，如何优化插入的性能\n"),r("ul",[r("li",[t._v("使用Fragment")])])]),t._v(" "),r("li",[t._v("向1000个并排的div元素中，插入一个平级的div元素，如何优化插入的性能\n"),r("ul",[r("li",[t._v("先display:none 然后插入 再display:block")]),t._v(" "),r("li",[t._v("赋予key，然后使用virtual-dom，先render，然后diff，最后patch")]),t._v(" "),r("li",[t._v("脱离文档流，用GPU去渲染，开启硬件加速")])])])]),t._v(" "),r("h2",{attrs:{id:"开放题-2万小球问题-在浏览器端-用js存储2万个小球的信息-包含小球的大小-位置-颜色等-如何做到对这2万条小球信息进行最优检索和存储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开放题-2万小球问题-在浏览器端-用js存储2万个小球的信息-包含小球的大小-位置-颜色等-如何做到对这2万条小球信息进行最优检索和存储"}},[t._v("#")]),t._v(" （开放题）2万小球问题：在浏览器端，用js存储2万个小球的信息，包含小球的大小，位置，颜色等，如何做到对这2万条小球信息进行最优检索和存储")]),t._v(" "),r("ul",[r("li",[t._v("用ArrayBuffer实现极致存储")]),t._v(" "),r("li",[t._v("哈夫曼编码 + 字典查询树实现更优索引")]),t._v(" "),r("li",[t._v("用bit-map实现大数据筛查")]),t._v(" "),r("li",[t._v("用hash索引实现简单快捷的检索")]),t._v(" "),r("li",[t._v("用IndexedDB实现动态存储扩充浏览器端虚拟容量")]),t._v(" "),r("li",[t._v("用iframe的漏洞实现浏览器端localStorage无限存储，实现2千万小球信息存储")])]),t._v(" "),r("h2",{attrs:{id:"开放题-接上一题如何尽可能流畅的实现这2万小球在浏览器中-以直线运动的动效显示出来"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开放题-接上一题如何尽可能流畅的实现这2万小球在浏览器中-以直线运动的动效显示出来"}},[t._v("#")]),t._v(" （开放题）接上一题如何尽可能流畅的实现这2万小球在浏览器中，以直线运动的动效显示出来")]),t._v(" "),r("ul",[r("li",[t._v("使用GPU硬件加速")]),t._v(" "),r("li",[t._v("使用webGL")]),t._v(" "),r("li",[t._v("使用assembly辅助计算，然后在浏览器端控制动画帧频")]),t._v(" "),r("li",[t._v("用web worker实现javascript多线程，分块处理小球")]),t._v(" "),r("li",[t._v("用单链表树算法和携程机制，实现任务动态分割和任务暂停、恢复、回滚，动态渲染和处理小球")])]),t._v(" "),r("h2",{attrs:{id:"开放题-100亿排序问题-内存不足-一次只允许你装载和操作1亿条数据-如何对100亿条数据进行排序。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开放题-100亿排序问题-内存不足-一次只允许你装载和操作1亿条数据-如何对100亿条数据进行排序。"}},[t._v("#")]),t._v(" （开放题）100亿排序问题：内存不足，一次只允许你装载和操作1亿条数据，如何对100亿条数据进行排序。")]),t._v(" "),r("h2",{attrs:{id:"开放题-a-b-c-d和a-b-c-d-哪个性能更高"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开放题-a-b-c-d和a-b-c-d-哪个性能更高"}},[t._v("#")]),t._v(" （开放题）"),r("code",[t._v("a.b.c.d")]),t._v("和"),r("code",[t._v("a['b']['c']['d']")]),t._v("，哪个性能更高")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/airuikun/Weekly-FE-Interview/issues/19",target:"_blank",rel:"noopener noreferrer"}},[t._v("github issue"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"git时光机问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git时光机问题"}},[t._v("#")]),t._v(" git时光机问题")])])}),[],!1,null,null,null);a.default=s.exports}}]);